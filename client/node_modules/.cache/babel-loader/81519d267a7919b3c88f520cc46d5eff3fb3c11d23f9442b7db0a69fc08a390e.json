{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hinan\\\\todo-app\\\\client\\\\src\\\\context\\\\TaskContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer, useEffect, useState } from \"react\";\nimport { getCategories, addCategoryAPI } from \"../services/TaskService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TaskContext = /*#__PURE__*/createContext();\nconst initialState = {\n  tasks: [],\n  editText: \"\",\n  // dueDate: \"\",\n  isLoading: true,\n  categoryFilter: [],\n  sortBy: \"deadlineAsc\"\n};\nconst taskReducer = (state, action) => {\n  switch (action.type) {\n    case \"INIT_TASKS\":\n      return {\n        ...state,\n        tasks: action.payload,\n        isLoading: false\n      };\n    case \"ADD_TASK\":\n      console.log(\"ADD_TASK\");\n      return {\n        ...state,\n        tasks: [...(state.tasks || []), action.payload]\n      };\n    case \"DELETE_TASK\":\n      return {\n        ...state,\n        tasks: state.tasks.filter(task => task._id !== action.payload.id)\n      };\n    case \"START_EDITING\":\n      return {\n        ...state,\n        tasks: state.tasks.map(task => task._id === action.payload.id ? {\n          ...task,\n          isEditing: true\n        } : task),\n        editText: action.payload.text\n      };\n    case \"SAVE_EDIT\":\n      return {\n        ...state,\n        tasks: state.tasks.map(task => task._id === action.payload.id ? {\n          ...task,\n          text: action.payload.text,\n          isEditing: false\n        } : task),\n        editText: \"\"\n      };\n    case \"TOGGLE_TASK\":\n      return {\n        ...state,\n        tasks: state.tasks.map(task => task._id === action.payload.id ? {\n          ...task,\n          completed: !task.completed\n        } : task),\n        editText: \"\"\n      };\n    case \"UPDATE_PRIORITY\":\n      return {\n        ...state,\n        tasks: state.tasks.map(task => task._id === action.payload.id ? {\n          ...task,\n          priority: action.payload.newPriority\n        } : task)\n      };\n    case \"SET_DUE_DATE\":\n      return {\n        ...state,\n        dueDate: action.payload\n      };\n    case \"UPDATE_DUE_DATE\":\n      return {\n        ...state,\n        tasks: state.tasks.map(task => task._id === action.payload.id ? {\n          ...task,\n          dueDate: action.payload.dueDate\n        } : task)\n      };\n    case \"TOGGLE_CATEGORY_FILTER\":\n      const id = action.payload;\n      const isSelected = state.categoryFilter.includes(id);\n      return {\n        ...state,\n        categoryFilter: isSelected ? state.categoryFilter.filter(cId => cId !== id) : [...state.categoryFilter, id]\n      };\n    case 'SET_CATEGORY_FILTER':\n      console.log('新しいカテゴリフィルター:', action.payload);\n      return {\n        ...state,\n        categoryFilter: action.payload\n      };\n    case \"SET_SORT\":\n      return {\n        ...state,\n        sortBy: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const TaskProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(taskReducer, initialState);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [newCategory, setNewCategory] = useState(\"\");\n\n  // 初期取得\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        var _category$;\n        const category = await getCategories();\n        setCategories(category.data);\n        setSelectedCategory(((_category$ = category[0]) === null || _category$ === void 0 ? void 0 : _category$.id) || \"\");\n      } catch (err) {\n        console.error(\"カテゴリ取得失敗:\", err);\n      }\n    };\n    fetchCategories();\n  }, []);\n  const addCategory = async () => {\n    if (newCategory && !categories.some(c => c.title === newCategory)) {\n      try {\n        console.log(\"新しいカテゴリー\", newCategory);\n        const updated = await addCategoryAPI(newCategory);\n        // const updated = await getCategories();\n        // console.log(\"新しいカテゴリー追加再取得\",newCategory)\n        console.log(\"新しいカテゴリー追加再取得\", updated);\n        // setCategories(updated.data);\n        setCategories(prev => [...prev, updated.data]);\n        setNewCategory(\"\");\n      } catch (err) {\n        console.error(\"カテゴリ追加失敗:\", err);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      state,\n      dispatch,\n      categories,\n      setCategories,\n      selectedCategory,\n      setSelectedCategory,\n      newCategory,\n      setNewCategory,\n      addCategory\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 8\n  }, this);\n};\n_s(TaskProvider, \"sFAlYLnM179Sa87AnbPhuf/A6Y8=\");\n_c = TaskProvider;\nvar _c;\n$RefreshReg$(_c, \"TaskProvider\");","map":{"version":3,"names":["createContext","useReducer","useEffect","useState","getCategories","addCategoryAPI","jsxDEV","_jsxDEV","TaskContext","initialState","tasks","editText","isLoading","categoryFilter","sortBy","taskReducer","state","action","type","payload","console","log","filter","task","_id","id","map","isEditing","text","completed","priority","newPriority","dueDate","isSelected","includes","cId","TaskProvider","children","_s","dispatch","categories","setCategories","selectedCategory","setSelectedCategory","newCategory","setNewCategory","fetchCategories","_category$","category","data","err","error","addCategory","some","c","title","updated","prev","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hinan/todo-app/client/src/context/TaskContext.jsx"],"sourcesContent":["import { createContext, useReducer,useEffect, useState} from \"react\";\r\nimport { getCategories, addCategoryAPI } from \"../services/TaskService\";\r\nexport const TaskContext = createContext();\r\n\r\nconst initialState = {\r\n  tasks: [],\r\n  editText: \"\",\r\n  // dueDate: \"\",\r\n  isLoading: true,\r\n  categoryFilter: [],\r\n  sortBy: \"deadlineAsc\", \r\n};\r\n\r\nconst taskReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case \"INIT_TASKS\":\r\n            return {\r\n                ...state,\r\n                tasks: action.payload,\r\n                isLoading: false\r\n            };\r\n        case \"ADD_TASK\":\r\n          console.log(\"ADD_TASK\")\r\n            return {\r\n              ...state,\r\n              tasks: [...(state.tasks || []), action.payload],\r\n            };\r\n        case \"DELETE_TASK\":\r\n          return{\r\n              ...state,\r\n              tasks: state.tasks.filter(task => task._id !== action.payload.id)\r\n          };\r\n        case \"START_EDITING\":\r\n            return {\r\n              ...state,\r\n              tasks: state.tasks.map(task =>\r\n                task._id === action.payload.id\r\n                  ? { ...task, isEditing: true }\r\n                  : task\r\n              ),\r\n              editText: action.payload.text,\r\n            };\r\n        case \"SAVE_EDIT\":\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map(task =>\r\n                task._id === action.payload.id\r\n                    ? { ...task, text: action.payload.text, isEditing: false }\r\n                    : task\r\n                ),\r\n                  editText:\"\"\r\n            };\r\n        case \"TOGGLE_TASK\":\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map(task =>\r\n                    task._id === action.payload.id\r\n                    ? { ...task, completed: !task.completed }\r\n                    : task\r\n                ),\r\n                    editText:\"\"\r\n            };\r\n        case \"UPDATE_PRIORITY\":\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map(task =>\r\n                task._id === action.payload.id\r\n                    ? { ...task, priority: action.payload.newPriority }\r\n                    : task\r\n                ),\r\n            };\r\n        case \"SET_DUE_DATE\":\r\n              return {\r\n                  ...state,\r\n                  dueDate: action.payload,\r\n              };\r\n        case \"UPDATE_DUE_DATE\":\r\n              return {\r\n                  ...state,\r\n                  tasks: state.tasks.map(task =>\r\n                    task._id === action.payload.id\r\n                      ? { ...task, dueDate: action.payload.dueDate }\r\n                      : task\r\n                  )\r\n                };\r\n        case \"TOGGLE_CATEGORY_FILTER\":\r\n          const id = action.payload;\r\n          const isSelected = state.categoryFilter.includes(id);\r\n          return {\r\n            ...state,\r\n            categoryFilter: isSelected\r\n            ? state.categoryFilter.filter((cId) => cId !== id)\r\n            : [...state.categoryFilter, id],\r\n          };\r\n        case 'SET_CATEGORY_FILTER':\r\n          console.log('新しいカテゴリフィルター:', action.payload); \r\n            return {\r\n                ...state,\r\n                categoryFilter: action.payload,\r\n            };\r\n        case \"SET_SORT\":\r\n            return {\r\n                ...state,\r\n                sortBy: action.payload,\r\n            };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export const TaskProvider = ({ children }) => {\r\n\r\n  const [state, dispatch] = useReducer(taskReducer, initialState);\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const [newCategory, setNewCategory] = useState(\"\");\r\n\r\n  // 初期取得\r\n  useEffect(() => {\r\n    const fetchCategories = async () => {\r\n      try {\r\n        const category = await getCategories();\r\n        setCategories(category.data);\r\n        setSelectedCategory(category[0]?.id || \"\");\r\n      } catch (err) {\r\n        console.error(\"カテゴリ取得失敗:\", err);\r\n      }\r\n    };\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  const addCategory = async () => {\r\n    if (newCategory && !categories.some(c => c.title === newCategory)) {\r\n      try {\r\n        console.log(\"新しいカテゴリー\",newCategory)\r\n        const updated = await addCategoryAPI(newCategory);\r\n        // const updated = await getCategories();\r\n        // console.log(\"新しいカテゴリー追加再取得\",newCategory)\r\n        console.log(\"新しいカテゴリー追加再取得\",updated)\r\n        // setCategories(updated.data);\r\n        setCategories(prev => [...prev, updated.data]); \r\n        setNewCategory(\"\");\r\n      } catch (err) {\r\n        console.error(\"カテゴリ追加失敗:\", err);\r\n      }\r\n    }\r\n  };\r\n       \r\nreturn (\r\n       <TaskContext.Provider\r\n      value={{\r\n        state,\r\n        dispatch,\r\n        categories,\r\n        setCategories,\r\n        selectedCategory,\r\n        setSelectedCategory,\r\n        newCategory,\r\n        setNewCategory,\r\n        addCategory\r\n      }}\r\n    >\r\n      {children}\r\n    </TaskContext.Provider>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}