{"ast":null,"code":"import { cookieStore } from '../cookieStore.mjs';\nimport { kSetCookie } from '../HttpResponse/decorators.mjs';\nfunction storeResponseCookies(request, response) {\n  const responseCookies = Reflect.get(response, kSetCookie);\n  if (responseCookies) {\n    cookieStore.setCookie(responseCookies, request.url);\n  }\n}\nexport { storeResponseCookies };","map":{"version":3,"names":["cookieStore","kSetCookie","storeResponseCookies","request","response","responseCookies","Reflect","get","setCookie","url"],"sources":["C:\\Users\\hinan\\todo-app\\client\\node_modules\\msw\\src\\core\\utils\\request\\storeResponseCookies.ts"],"sourcesContent":["import { cookieStore } from '../cookieStore'\nimport { kSetCookie } from '../HttpResponse/decorators'\n\nexport function storeResponseCookies(\n  request: Request,\n  response: Response,\n): void {\n  // Grab the raw \"Set-Cookie\" response header provided\n  // in the HeadersInit for this mocked response.\n  const responseCookies = Reflect.get(response, kSetCookie) as\n    | string\n    | undefined\n\n  if (responseCookies) {\n    cookieStore.setCookie(responseCookies, request.url)\n  }\n}\n"],"mappings":"AAAA,SAASA,WAAA,QAAmB;AAC5B,SAASC,UAAA,QAAkB;AAEpB,SAASC,qBACdC,OAAA,EACAC,QAAA,EACM;EAGN,MAAMC,eAAA,GAAkBC,OAAA,CAAQC,GAAA,CAAIH,QAAA,EAAUH,UAAU;EAIxD,IAAII,eAAA,EAAiB;IACnBL,WAAA,CAAYQ,SAAA,CAAUH,eAAA,EAAiBF,OAAA,CAAQM,GAAG;EACpD;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}