{"ast":null,"code":"import apiClient from './apiClient';\nimport { showSuccess, showError } from '../utils/toast';\nexport const getTasks = async () => {\n  try {\n    const res = await apiClient.get('/tasks');\n    return res.data;\n  } catch (err) {\n    console.error('タスク取得エラー:', err);\n    throw err;\n  }\n};\nexport const addTask = async taskDate => {\n  try {\n    console.log(\"addTask\", taskDate);\n    const res = await apiClient.post('/task', taskDate);\n    showSuccess(\"タスクを新しく追加しました\");\n    return res.data;\n  } catch (err) {\n    console.error('タスク追加エラー:', err);\n    throw err;\n  }\n};\nexport const updateTaskAPI = async (id, updatedData) => {\n  try {\n    console.log(\"updateTaskAPI\", updatedData);\n    await apiClient.patch(`/tasks/${id}`, updatedData);\n    showSuccess(\"タスクを編集しました\");\n  } catch (err) {\n    console.error('タスク更新エラー:', err);\n    throw err;\n  }\n};\nexport const deleteTaskAPI = async id => {\n  try {\n    await apiClient.delete(`/tasks/${id}`);\n    showSuccess(\"タスクを削除しました\");\n  } catch (err) {\n    console.error('タスク削除エラー:', err);\n    throw err;\n  }\n};\n\n//カテゴリー\nexport const getCategories = async () => {\n  try {\n    const res = await apiClient.get('/categories');\n    return res.data;\n  } catch (err) {\n    console.error('カテゴリー取得エラー:', err);\n    throw err;\n  }\n};\nexport const addCategoryAPI = async title => {\n  try {\n    console.log(\"addCategoryAPI\", title);\n    const res = await apiClient.post('/categories', {\n      category: title\n    });\n    showSuccess(\"カテゴリーを新しく追加しました\");\n    return res.data;\n  } catch (err) {\n    console.error('カテゴリー追加エラー:', err);\n    throw err;\n  }\n};\nexport const updateCategory = async (id, updatedData) => {\n  try {\n    await apiClient.put(`/categories/${id}`, updatedData);\n    showSuccess(\"カテゴリーを編集しました\");\n  } catch (err) {\n    console.error('カテゴリー更新エラー:', err);\n    throw err;\n  }\n};\nexport const deleteCategory = async id => {\n  try {\n    await apiClient.delete(`/categories/${id}`);\n    showSuccess(\"カテゴリーを削除しました\");\n  } catch (err) {\n    console.error('カテゴリー削除エラー:', err);\n    throw err;\n  }\n};","map":{"version":3,"names":["apiClient","showSuccess","showError","getTasks","res","get","data","err","console","error","addTask","taskDate","log","post","updateTaskAPI","id","updatedData","patch","deleteTaskAPI","delete","getCategories","addCategoryAPI","title","category","updateCategory","put","deleteCategory"],"sources":["C:/Users/hinan/todo-app/client/src/services/TaskService.js"],"sourcesContent":["import apiClient from './apiClient';\r\nimport { showSuccess, showError } from '../utils/toast';\r\n\r\nexport const getTasks = async () => {\r\ntry {\r\n    const res = await apiClient.get('/tasks');\r\n    return res.data;\r\n  } catch (err) {\r\n    console.error('タスク取得エラー:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const addTask = async (taskDate) => {\r\n  try {\r\n    console.log(\"addTask\",taskDate);\r\n    const res = await apiClient.post('/task', taskDate);\r\n    showSuccess(\"タスクを新しく追加しました\")\r\n    return res.data;\r\n  } catch (err) {\r\n    console.error('タスク追加エラー:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const updateTaskAPI = async (id, updatedData) => {\r\n  try {\r\n    console.log(\"updateTaskAPI\",updatedData);\r\n    await apiClient.patch(`/tasks/${id}`, updatedData);\r\n    showSuccess(\"タスクを編集しました\")\r\n  } catch (err) {\r\n    console.error('タスク更新エラー:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const deleteTaskAPI = async (id) => {\r\n  try {\r\n    await apiClient.delete(`/tasks/${id}`);\r\n    showSuccess(\"タスクを削除しました\")\r\n  } catch (err) {\r\n    console.error('タスク削除エラー:', err);\r\n    throw err;\r\n  }\r\n  \r\n};\r\n\r\n//カテゴリー\r\nexport const getCategories = async () => {\r\ntry {\r\n    const res = await apiClient.get('/categories');\r\n    return res.data;\r\n  } catch (err) {\r\n    console.error('カテゴリー取得エラー:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const addCategoryAPI = async (title) => {\r\ntry {\r\n  console.log(\"addCategoryAPI\",title)\r\n    const res = await apiClient.post('/categories', { category: title });\r\n    showSuccess(\"カテゴリーを新しく追加しました\")\r\n    return res.data;\r\n  } catch (err) {\r\n    console.error('カテゴリー追加エラー:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const updateCategory = async (id, updatedData) => {\r\ntry {\r\n    await apiClient.put(`/categories/${id}`, updatedData);\r\n    showSuccess(\"カテゴリーを編集しました\")\r\n  } catch (err) {\r\n    console.error('カテゴリー更新エラー:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const deleteCategory = async (id) => {\r\n  try {\r\n    await apiClient.delete(`/categories/${id}`);\r\n    showSuccess(\"カテゴリーを削除しました\")\r\n  } catch (err) {\r\n    console.error('カテゴリー削除エラー:', err);\r\n    throw err;\r\n  }\r\n  \r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}