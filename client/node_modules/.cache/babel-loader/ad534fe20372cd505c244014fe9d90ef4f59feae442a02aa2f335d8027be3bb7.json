{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hinan\\\\todo-app\\\\client\\\\src\\\\TodoApp.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport TaskInput from \"./component/TaskInput\";\nimport Navbar from \"./component/Navbar\";\nimport { TaskContext } from \"./context/TaskContext\";\nimport CategoryInput from \"./component/CategoryInput\";\nimport { useContext } from \"react\";\nimport TaskListWrapper from \"./component/TaskListWrapper\";\n// const SECRET_KEY = process.env.REACT_APP_SECRET_KEY;\nimport 'react-calendar/dist/Calendar.css';\nimport { useTasks } from \"./hooks/useGetTasks\";\nimport { useGetCategories } from \"./hooks/useGetCategories\";\nimport { addTask } from './services/TaskService';\nimport { showSuccess, showError } from \"./utils/toast\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TodoApp() {\n  _s();\n  const {\n    state,\n    dispatch\n  } = useContext(TaskContext);\n  const {\n    editText,\n    dueDate,\n    isLoading,\n    categoryFilter\n  } = state;\n  const [selectedDate] = useState(new Date());\n  const {\n    fetchTasks\n  } = useTasks();\n  const {\n    fetchCategories\n  } = useGetCategories();\n  useEffect(() => {\n    fetchTasks();\n    fetchCategories();\n  }, []);\n  const {\n    categories,\n    selectedCategory,\n    setSelectedCategory,\n    newCategory,\n    setNewCategory,\n    addCategory\n  } = useContext(TaskContext);\n  const tasksForSelectedDate = Array.isArray(state.tasks) ? state.tasks.filter(task => task.dueDate && new Date(task.dueDate).toDateString() === selectedDate.toDateString()) : [];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 max-w-md mx-auto bg-white shadow rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"ToDo \\u30A2\\u30D7\\u30EA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u8AAD\\u307F\\u8FBC\\u307F\\u4E2D...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TaskInput, {\n          setPriority: setPriority,\n          selectedCategory: selectedCategory,\n          setSelectedCategory: setSelectedCategory,\n          categories: categories,\n          dueDate: dueDate,\n          setDueDate: date => dispatch({\n            type: \"SET_DUE_DATE\",\n            payload: date\n          }),\n          categoryFilter: categoryFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TaskListWrapper, {\n          tasks: tasksForSelectedDate,\n          categories: categories,\n          editText: editText,\n          dueDate: dueDate,\n          categoryFilter: state.categoryFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(CategoryInput, {\n          newCategory: newCategory,\n          setNewCategory: setNewCategory,\n          addCategory: addCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(TodoApp, \"gf0tN/KIynIC1HmpiX1uLFqfyPg=\", false, function () {\n  return [useTasks, useGetCategories];\n});\n_c = TodoApp;\nvar _c;\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"names":["useState","useEffect","useRef","TaskInput","Navbar","TaskContext","CategoryInput","useContext","TaskListWrapper","useTasks","useGetCategories","addTask","showSuccess","showError","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoApp","_s","state","dispatch","editText","dueDate","isLoading","categoryFilter","selectedDate","Date","fetchTasks","fetchCategories","categories","selectedCategory","setSelectedCategory","newCategory","setNewCategory","addCategory","tasksForSelectedDate","Array","isArray","tasks","filter","task","toDateString","children","fileName","_jsxFileName","lineNumber","columnNumber","className","setPriority","setDueDate","date","type","payload","_c","$RefreshReg$"],"sources":["C:/Users/hinan/todo-app/client/src/TodoApp.js"],"sourcesContent":["\r\nimport { useState, useEffect,useRef } from \"react\";\r\nimport TaskInput from \"./component/TaskInput\";\r\nimport Navbar from \"./component/Navbar\";\r\nimport { TaskContext } from \"./context/TaskContext\";\r\nimport CategoryInput from \"./component/CategoryInput\";\r\nimport { useContext } from \"react\"; \r\nimport TaskListWrapper from \"./component/TaskListWrapper\";\r\n// const SECRET_KEY = process.env.REACT_APP_SECRET_KEY;\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport { useTasks } from \"./hooks/useGetTasks\";\r\nimport { useGetCategories } from \"./hooks/useGetCategories\"; \r\nimport { addTask} from './services/TaskService';\r\nimport {showSuccess,showError} from \"./utils/toast\";\r\n\r\n\r\nexport default function TodoApp() {\r\n  const { state, dispatch } = useContext(TaskContext);\r\n  const { editText ,dueDate ,isLoading,categoryFilter} = state;\r\n  const [selectedDate] = useState(new Date());\r\n  const { fetchTasks } = useTasks();\r\n  const { fetchCategories } = useGetCategories();\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n    fetchCategories()\r\n  }, []);\r\n\r\n    const {\r\n      categories,\r\n      selectedCategory,\r\n      setSelectedCategory,\r\n      newCategory,\r\n      setNewCategory,\r\n      addCategory\r\n  } =   useContext(TaskContext);\r\n  \r\n\r\nconst tasksForSelectedDate = Array.isArray(state.tasks)\r\n  ? state.tasks.filter(\r\n      (task) =>\r\n        task.dueDate &&\r\n        new Date(task.dueDate).toDateString() === selectedDate.toDateString()\r\n    )\r\n  : [];\r\n  \r\n  return (\r\n    <>\r\n    <Navbar />\r\n    <div className=\"p-4 max-w-md mx-auto bg-white shadow rounded-lg\">\r\n      <h1 className=\"text-xl font-bold mb-4\">ToDo アプリ</h1>\r\n\r\n      {isLoading ? (\r\n      <p>読み込み中...</p>\r\n      \r\n    ) : (\r\n      <>\r\n      <TaskInput\r\n        setPriority={setPriority}\r\n        selectedCategory={selectedCategory}\r\n        setSelectedCategory={setSelectedCategory}\r\n        categories={categories}\r\n        dueDate = {dueDate}\r\n        setDueDate={(date) => dispatch({ type: \"SET_DUE_DATE\", payload: date })}\r\n        categoryFilter={categoryFilter}\r\n      />\r\n\r\n      <TaskListWrapper\r\n        tasks={tasksForSelectedDate}\r\n        categories={categories}\r\n        editText={editText}\r\n        dueDate={dueDate}\r\n        categoryFilter={state.categoryFilter}\r\n      />\r\n\r\n      <CategoryInput\r\n        newCategory = {newCategory}\r\n        setNewCategory = {setNewCategory}\r\n        addCategory = {addCategory}\r\n      />\r\n      </>\r\n      )}\r\n  </div>\r\n</>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}