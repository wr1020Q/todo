{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hinan\\\\todo-app\\\\client\\\\src\\\\TodoApp.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport TaskInput from \"./component/TaskInput\";\nimport Navbar from \"./component/Navbar\";\nimport { TaskContext } from \"./context/TaskContext\";\nimport CategoryInput from \"./component/CategoryInput\";\nimport { useContext } from \"react\";\nimport TaskListWrapper from \"./component/TaskListWrapper\";\nimport 'react-calendar/dist/Calendar.css';\nimport { useTasks } from \"./hooks/useGetTasks\";\nimport { useGetCategories } from \"./hooks/useGetCategories\";\nimport { showError } from \"./utils/toast\";\nimport { useAuth } from './context/AuthContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TodoApp() {\n  _s();\n  const didFetchRef = useRef(false);\n  const {\n    state,\n    dispatch\n  } = useContext(TaskContext);\n  // const { isLoading} = state;\n  const {\n    user,\n    loading,\n    logout\n  } = useAuth();\n  const [selectedDate] = useState(new Date());\n  const {\n    fetchTasks\n  } = useTasks();\n  const {\n    fetchCategories\n  } = useGetCategories();\n  useEffect(() => {\n    if (didFetchRef.current) return;\n    didFetchRef.current = true;\n    const fetchInitialData = async () => {\n      try {\n        await Promise.all([fetchTasks(), fetchCategories()]);\n      } catch {\n        showError(\"初期データの取得に失敗しました。サーバーをご確認ください。\");\n      }\n    };\n    fetchInitialData();\n  }, []);\n  const {\n    categories\n  } = useContext(TaskContext);\n  const tasksForSelectedDate = Array.isArray(state.tasks) ? state.tasks.filter(task => task.dueDate && new Date(task.dueDate).toDateString() === selectedDate.toDateString()) : [];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 max-w-md mx-auto bg-white shadow rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"ToDo \\u30A2\\u30D7\\u30EA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u8AAD\\u307F\\u8FBC\\u307F\\u4E2D...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TaskInput, {\n          categories: categories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TaskListWrapper, {\n          tasks: tasksForSelectedDate,\n          categories: categories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(CategoryInput, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(TodoApp, \"3td9ax73DnRXdEoGFtvaKlST8Gs=\", false, function () {\n  return [useAuth, useTasks, useGetCategories];\n});\n_c = TodoApp;\nvar _c;\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"names":["useState","useEffect","useRef","TaskInput","Navbar","TaskContext","CategoryInput","useContext","TaskListWrapper","useTasks","useGetCategories","showError","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoApp","_s","didFetchRef","state","dispatch","user","loading","logout","selectedDate","Date","fetchTasks","fetchCategories","current","fetchInitialData","Promise","all","categories","tasksForSelectedDate","Array","isArray","tasks","filter","task","dueDate","toDateString","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/hinan/todo-app/client/src/TodoApp.js"],"sourcesContent":["\r\nimport { useState, useEffect,useRef } from \"react\";\r\nimport TaskInput from \"./component/TaskInput\";\r\nimport Navbar from \"./component/Navbar\";\r\nimport { TaskContext } from \"./context/TaskContext\";\r\nimport CategoryInput from \"./component/CategoryInput\";\r\nimport { useContext } from \"react\"; \r\nimport TaskListWrapper from \"./component/TaskListWrapper\";\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport { useTasks } from \"./hooks/useGetTasks\";\r\nimport { useGetCategories } from \"./hooks/useGetCategories\"; \r\nimport {showError} from \"./utils/toast\";\r\nimport { useAuth } from './context/AuthContext';\r\n\r\nexport default function TodoApp() {\r\n  const didFetchRef = useRef(false);\r\n  const { state, dispatch } = useContext(TaskContext);\r\n  // const { isLoading} = state;\r\n  const { user, loading, logout } = useAuth();\r\n  const [selectedDate] = useState(new Date());\r\n  const { fetchTasks } = useTasks();\r\n  const { fetchCategories } = useGetCategories();\r\n\r\nuseEffect(() => {\r\n  \r\n\r\n  if (didFetchRef.current) return;\r\n  didFetchRef.current = true;\r\n\r\n  const fetchInitialData = async () => {\r\n    try {\r\n      await Promise.all([fetchTasks(), fetchCategories()]);\r\n    } catch {\r\n      showError(\"初期データの取得に失敗しました。サーバーをご確認ください。\");\r\n    }\r\n  };\r\n  fetchInitialData();\r\n}, []);\r\n\r\n  const {categories} =   useContext(TaskContext);\r\n  \r\n\r\nconst tasksForSelectedDate = Array.isArray(state.tasks)\r\n  ? state.tasks.filter(\r\n      (task) =>\r\n        task.dueDate &&\r\n        new Date(task.dueDate).toDateString() === selectedDate.toDateString()\r\n    )\r\n  : [];\r\n  \r\n  return (\r\n    <>\r\n    <Navbar />\r\n    <div className=\"p-4 max-w-md mx-auto bg-white shadow rounded-lg\">\r\n      <h1 className=\"text-xl font-bold mb-4\">ToDo アプリ</h1>\r\n\r\n      {loading ? (\r\n      <p>読み込み中...</p>\r\n      \r\n    ) : (\r\n      <>\r\n      <TaskInput\r\n        categories={categories}\r\n      />\r\n\r\n      <TaskListWrapper\r\n        tasks={tasksForSelectedDate}\r\n        categories={categories}\r\n      />\r\n        <CategoryInput/>\r\n      </>\r\n      )}\r\n  </div>\r\n</>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}