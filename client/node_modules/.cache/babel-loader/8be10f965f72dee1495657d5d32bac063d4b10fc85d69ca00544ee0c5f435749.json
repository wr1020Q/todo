{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hinan\\\\todo-app\\\\client\\\\src\\\\component\\\\TaskItem.jsx\",\n  _s = $RefreshSig$();\nimport { React, useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TaskItem({\n  task,\n  editingTaskId,\n  editText,\n  // setEditText,\n  startEditing,\n  toggleTask,\n  updatePriority,\n  updateDueDate,\n  handleUpdateTask,\n  deleteTask,\n  errorMessage,\n  toggleError,\n  priorityError,\n  dueDateError\n}) {\n  _s();\n  const isEditing = editingTaskId === task._id;\n  const [localEditText, setLocalEditText] = useState(\"\");\n  useEffect(() => {\n    if (isEditing) {\n      setLocalEditText(task.text); // 編集開始時だけセット\n    }\n  }, [isEditing, task.text]);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: `flex justify-between items-center p-2 border-b\n        ${task.priority === 1 ? \"bg-red-200\" : \"\"}\n        ${task.priority === 2 ? \"bg-yellow-200\" : \"\"}\n        ${task.priority === 3 ? \"bg-green-200\" : \"\"}\n      `,\n    onDoubleClick: () => startEditing(task._id, task.text),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: task.completed,\n      onChange: () => toggleTask(task._id, !task.completed),\n      className: \"mr-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), toggleError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 text-xs italic\",\n      children: toggleError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 23\n    }, this), isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: localEditText,\n        onChange: e => setLocalEditText(e.target.value),\n        onBlur: () => handleUpdateTask(task._id, localEditText),\n        onKeyDown: e => {\n          if (e.key === \"Enter\") {\n            e.preventDefault();\n            handleUpdateTask(task._id, localEditText);\n          }\n        },\n        autoFocus: true,\n        className: \"flex-grow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-xs italic\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `flex-grow cursor-pointer ${task.completed ? \"line-through text-gray-400\" : \"\"}`,\n        onClick: () => toggleTask(task._id, task.completed),\n        onDoubleClick: () => startEditing(task._id, task.text),\n        children: task.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: task.priority,\n        onChange: e => updatePriority(task._id, e.target.value),\n        className: \"border p-1 rounded text-sm mr-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 1,\n          children: \"\\u9AD8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 2,\n          children: \"\\u4E2D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 3,\n          children: \"\\u4F4E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), priorityError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-xs italic\",\n        children: priorityError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: task.dueDate ? task.dueDate.split(\"T\")[0] : \"\",\n        onChange: e => updateDueDate(task._id, e.target.value),\n        className: \"mr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), dueDateError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-xs italic\",\n        children: dueDateError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => deleteTask(task._id),\n        className: \"text-red-500 text-sm\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTrash\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, task._id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskItem, \"l8R+M8t6Gf8BX2o5/aIHlbupBcM=\");\n_c = TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","useEffect","useState","FontAwesomeIcon","faTrash","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskItem","task","editingTaskId","editText","startEditing","toggleTask","updatePriority","updateDueDate","handleUpdateTask","deleteTask","errorMessage","toggleError","priorityError","dueDateError","_s","isEditing","_id","localEditText","setLocalEditText","text","className","priority","onDoubleClick","children","type","checked","completed","onChange","fileName","_jsxFileName","lineNumber","columnNumber","value","e","target","onBlur","onKeyDown","key","preventDefault","autoFocus","onClick","dueDate","split","icon","_c","$RefreshReg$"],"sources":["C:/Users/hinan/todo-app/client/src/component/TaskItem.jsx"],"sourcesContent":["\r\n\r\nimport {React ,useEffect,useState}from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function TaskItem({\r\n  task,\r\n  editingTaskId,\r\n  editText,\r\n  // setEditText,\r\n  startEditing,\r\n  toggleTask,\r\n  updatePriority,\r\n  updateDueDate,\r\n  handleUpdateTask,\r\n  deleteTask,\r\n  errorMessage,\r\n  toggleError,\r\n  priorityError,\r\n  dueDateError\r\n}) {\r\n  const isEditing = editingTaskId === task._id;\r\n  const [localEditText, setLocalEditText] = useState(\"\");\r\n  useEffect(() => {\r\n  if (isEditing) {\r\n    setLocalEditText(task.text); // 編集開始時だけセット\r\n  }\r\n}, [isEditing, task.text]);\r\n  return (\r\n    <li\r\n      key={task._id}\r\n      className={`flex justify-between items-center p-2 border-b\r\n        ${task.priority === 1 ? \"bg-red-200\" : \"\"}\r\n        ${task.priority === 2 ? \"bg-yellow-200\" : \"\"}\r\n        ${task.priority === 3 ? \"bg-green-200\" : \"\"}\r\n      `}\r\n      onDoubleClick={() => startEditing(task._id, task.text)}\r\n    >\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={task.completed}\r\n        onChange={() => toggleTask(task._id, !task.completed)}\r\n        className=\"mr-2\"\r\n      />\r\n      {toggleError && <p className=\"text-red-500 text-xs italic\">{toggleError}</p>}\r\n      {isEditing ? (\r\n      <>\r\n        <input\r\n          type=\"text\"\r\n          value={localEditText}\r\n          onChange={(e) => setLocalEditText(e.target.value)}\r\n          onBlur={() => handleUpdateTask(task._id, localEditText)}\r\n          onKeyDown={(e) => {\r\n            if (e.key === \"Enter\") {\r\n              e.preventDefault(); \r\n              handleUpdateTask(task._id, localEditText);\r\n            }     \r\n          }}\r\n          autoFocus\r\n          className=\"flex-grow\"\r\n        />\r\n        {errorMessage && <p className=\"text-red-500 text-xs italic\">{errorMessage}</p>}\r\n      </>\r\n      ) : (\r\n        <>\r\n          <span\r\n            className={`flex-grow cursor-pointer ${task.completed ? \"line-through text-gray-400\" : \"\"}`}\r\n            onClick={() => toggleTask(task._id, task.completed)}\r\n            onDoubleClick={() => startEditing(task._id, task.text)}\r\n          >\r\n            {task.text}\r\n          </span>\r\n          <select\r\n            value={task.priority}\r\n            onChange={(e) => updatePriority(task._id, e.target.value)}\r\n            className=\"border p-1 rounded text-sm mr-2\"\r\n          >\r\n            <option value={1}>高</option>\r\n            <option value={2}>中</option>\r\n            <option value={3}>低</option>\r\n          </select>\r\n          {priorityError && <p className=\"text-red-500 text-xs italic\">{priorityError}</p>}\r\n          <input\r\n            type=\"date\"\r\n            value={task.dueDate ? task.dueDate.split(\"T\")[0] : \"\"}\r\n            onChange={(e) => updateDueDate(task._id, e.target.value)}\r\n            className=\"mr-2\"\r\n          />\r\n          {dueDateError && <p className=\"text-red-500 text-xs italic\">{dueDateError}</p>}\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => deleteTask(task._id)}\r\n            className=\"text-red-500 text-sm\"\r\n          >\r\n            <FontAwesomeIcon icon={faTrash} />\r\n          </button>\r\n        </>\r\n      )}\r\n    </li>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}