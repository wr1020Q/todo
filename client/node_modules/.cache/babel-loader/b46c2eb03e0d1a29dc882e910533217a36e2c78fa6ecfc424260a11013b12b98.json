{"ast":null,"code":"import axios from 'axios';\nimport { refreshUser } from \"./login.js\";\nconst apiClient = axios.create({\n  baseURL: 'http://localhost:3000/api',\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 5000\n});\naxios.interceptors.request.use(function (config) {\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\naxios.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  return Promise.reject(error);\n});\nexport default apiClient;","map":{"version":3,"names":["axios","refreshUser","apiClient","create","baseURL","withCredentials","headers","timeout","interceptors","request","use","config","error","Promise","reject","response"],"sources":["C:/Users/hinan/todo-app/client/src/services/apiClient.js"],"sourcesContent":["import axios from 'axios';\r\nimport {refreshUser} from \"./login.js\"\r\n\r\n\r\nconst apiClient = axios.create({\r\n  baseURL: 'http://localhost:3000/api', \r\n  withCredentials: true, \r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  timeout: 5000, \r\n});\r\n\r\naxios.interceptors.request.use(function (config) {\r\n    return config;\r\n  }, function (error) {\r\n    return Promise.reject(error);\r\n  });\r\n\r\naxios.interceptors.response.use(function (response) {\r\n    return response;\r\n  }, function (error) {\r\n    return Promise.reject(error);\r\n  });\r\n\r\n\r\n\r\nexport default apiClient;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,WAAW,QAAO,YAAY;AAGtC,MAAMC,SAAS,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC7BC,OAAO,EAAE,2BAA2B;EACpCC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,OAAO,EAAE;AACX,CAAC,CAAC;AAEFP,KAAK,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,UAAUC,MAAM,EAAE;EAC7C,OAAOA,MAAM;AACf,CAAC,EAAE,UAAUC,KAAK,EAAE;EAClB,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;AAEJZ,KAAK,CAACQ,YAAY,CAACO,QAAQ,CAACL,GAAG,CAAC,UAAUK,QAAQ,EAAE;EAChD,OAAOA,QAAQ;AACjB,CAAC,EAAE,UAAUH,KAAK,EAAE;EAClB,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;AAIJ,eAAeV,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}