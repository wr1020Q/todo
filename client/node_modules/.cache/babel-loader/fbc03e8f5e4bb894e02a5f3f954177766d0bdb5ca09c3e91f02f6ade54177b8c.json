{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hinan\\\\todo-app\\\\client\\\\src\\\\component\\\\TaskList.jsx\",\n  _s = $RefreshSig$();\nimport { useMemo } from \"react\";\nimport { updateTaskAPI } from \"../services/TaskService\";\nimport { useContext } from \"react\";\nimport { TaskContext } from \"../context/TaskContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TaskList({\n  tasks,\n  categories,\n  startEditing,\n  editText,\n  setEditText,\n  // saveEdit,\n  toggleTask,\n  toggleComplete,\n  deleteTask,\n  updatePriority,\n  removeCategory,\n  updateDueDate,\n  categoryFilter\n}) {\n  _s();\n  console.log(\"受け取ったLIST内 tasks:\", tasks);\n  console.log(\"受け取ったLIST内 categories:\", categories);\n  const {\n    dispatch\n  } = useContext(TaskContext);\n  const handleUpdateTask = async (taskId, updatedFields) => {\n    try {\n      const updatedTask = await updateTaskAPI(taskId, updatedFields);\n      dispatch({\n        type: \"UPDATE_TASK\",\n        payload: updatedTask\n      });\n    } catch (err) {\n      console.error(\"タスクの更新に失敗しました:\", err);\n    }\n  };\n  const filteredTasks = useMemo(() => {\n    return tasks.filter(task => categoryFilter.length === 0 || categoryFilter.includes(task.category));\n  }, [tasks, categoryFilter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: categories.map(cat => {\n      const tasksInCategory = filteredTasks.filter(task => task.category === cat);\n      if (tasksInCategory.length === 0) return null;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-bold text-lg mt-4\",\n            children: cat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), cat !== \"未分類\" && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeCategory(cat._id, cat.title),\n            className: \"text-red-500 text-sm\",\n            children: \"\\u524A\\u9664\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: tasksInCategory.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `flex justify-between items-center p-2 border-b\n                    ${task.priority === \"高\" ? \"bg-red-200\" : \"\"}\n                    ${task.priority === \"中\" ? \"bg-yellow-200\" : \"\"}\n                    ${task.priority === \"低\" ? \"bg-green-200\" : \"\"}\n                  `,\n            onDoubleClick: () => startEditing(task.id, task.text),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: task.completed,\n              onChange: () => toggleComplete(task.id),\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this), task.isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: editText,\n                onChange: e => setEditText(e.target.value),\n                onBlur: () => handleUpdateTask(task.id, editText),\n                onKeyDown: e => e.key === \"Enter\" && handleUpdateTask(task.id, editText),\n                autoFocus: true,\n                className: \"flex-grow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 23\n              }, this)\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: `flex-grow cursor-pointer ${task.completed ? \"line-through text-gray-400\" : \"\"}`,\n                onClick: () => toggleTask(task.id),\n                children: task.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: task.priority,\n                onChange: e => updatePriority(task.id, e.target.value),\n                className: \"border p-1 rounded text-sm mr-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 1,\n                  children: \"\\u9AD8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 2,\n                  children: \"\\u4E2D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 3,\n                  children: \"\\u4F4E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: task.dueDate || \"\",\n                onChange: e => updateDueDate(task.id, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteTask(task.id),\n                className: \"text-red-500 text-sm\",\n                children: \"\\u524A\\u9664\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, cat, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"+N09VgCRnOIGh3N11owABWo3kXA=\");\n_c = TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["useMemo","updateTaskAPI","useContext","TaskContext","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","tasks","categories","startEditing","editText","setEditText","toggleTask","toggleComplete","deleteTask","updatePriority","removeCategory","updateDueDate","categoryFilter","_s","console","log","dispatch","handleUpdateTask","taskId","updatedFields","updatedTask","type","payload","err","error","filteredTasks","filter","task","length","includes","category","children","map","cat","tasksInCategory","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_id","title","priority","onDoubleClick","id","text","checked","completed","onChange","isEditing","value","e","target","onBlur","onKeyDown","key","autoFocus","dueDate","_c","$RefreshReg$"],"sources":["C:/Users/hinan/todo-app/client/src/component/TaskList.jsx"],"sourcesContent":["import { useMemo } from \"react\";\r\n\r\nimport { updateTaskAPI } from \"../services/TaskService\";\r\nimport { useContext } from \"react\";\r\nimport { TaskContext } from \"../context/TaskContext\"; \r\n\r\nexport default function TaskList({\r\n  tasks,\r\n  categories,\r\n  startEditing,\r\n  editText,\r\n  setEditText,\r\n  // saveEdit,\r\n  toggleTask,\r\n  toggleComplete,\r\n  deleteTask,\r\n  updatePriority,\r\n  removeCategory,\r\n  updateDueDate,\r\n  categoryFilter\r\n}) {\r\n\r\n  console.log(\"受け取ったLIST内 tasks:\", tasks);\r\n  console.log(\"受け取ったLIST内 categories:\", categories);\r\n  const {  dispatch } = useContext(TaskContext);\r\n\r\n  const handleUpdateTask = async (taskId, updatedFields) => {\r\n  try {\r\n    const updatedTask = await updateTaskAPI(taskId, updatedFields);\r\n\r\n    dispatch({\r\n      type: \"UPDATE_TASK\",\r\n      payload: updatedTask,\r\n    });\r\n  } catch (err) {\r\n    console.error(\"タスクの更新に失敗しました:\", err);\r\n  }\r\n};\r\n\r\n  const filteredTasks = useMemo(() => {\r\n    return tasks.filter((task) =>\r\n      categoryFilter.length === 0 || categoryFilter.includes(task.category)\r\n    );\r\n  }, [tasks, categoryFilter]);\r\n\r\n  \r\n  return (\r\n    <div>\r\n      {categories.map((cat) => {\r\n        const tasksInCategory = filteredTasks.filter((task) => task.category === cat);\r\n        if (tasksInCategory.length === 0) return null;\r\n\r\n        return (\r\n          <div key={cat} className=\"mb-4\">\r\n            <div className=\"flex justify-between items-center\">\r\n              <h2 className=\"font-bold text-lg mt-4\">{cat}</h2>\r\n              {cat !== \"未分類\" && (\r\n                <button\r\n                  onClick={() => removeCategory(cat._id, cat.title)}\r\n                  className=\"text-red-500 text-sm\"\r\n                >削除</button>\r\n              )}\r\n            </div>\r\n\r\n            <ul>\r\n              {tasksInCategory.map((task) => (\r\n                <li\r\n                  key={task.id}\r\n                  className={`flex justify-between items-center p-2 border-b\r\n                    ${task.priority === \"高\" ? \"bg-red-200\" : \"\"}\r\n                    ${task.priority === \"中\" ? \"bg-yellow-200\" : \"\"}\r\n                    ${task.priority === \"低\" ? \"bg-green-200\" : \"\"}\r\n                  `}\r\n                  onDoubleClick={() => startEditing(task.id, task.text)}\r\n                >\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={task.completed}\r\n                    onChange={() => toggleComplete(task.id)}\r\n                    className=\"mr-2\"\r\n                  />\r\n                  {task.isEditing ? (\r\n                    <><input\r\n                      type=\"text\"\r\n                      value={editText}\r\n                      onChange={(e) => setEditText(e.target.value)}\r\n                      onBlur={() => handleUpdateTask(task.id,editText)}\r\n                      onKeyDown={(e) => e.key === \"Enter\" && handleUpdateTask(task.id,editText)}\r\n                      autoFocus\r\n                      className=\"flex-grow\" /></>\r\n                  ) : (\r\n                    <>\r\n                      <span\r\n                        className={`flex-grow cursor-pointer ${\r\n                          task.completed ? \"line-through text-gray-400\" : \"\"\r\n                        }`}\r\n                        onClick={() => toggleTask(task.id)}\r\n                      >\r\n                        {task.text}\r\n                      </span>\r\n                      <select\r\n                        value={task.priority}\r\n                        onChange={(e) =>updatePriority(task.id, e.target.value)}\r\n                        className=\"border p-1 rounded text-sm mr-2\"\r\n                      >\r\n                        <option value={1}>高</option>\r\n                        <option value={2}>中</option>\r\n                        <option value={3}>低</option>\r\n                      </select>\r\n                      <input\r\n                        type=\"date\"\r\n                        value={task.dueDate || \"\"}\r\n                        onChange={(e) => updateDueDate(task.id, e.target.value)} />\r\n                      <button\r\n                        onClick={() => deleteTask(task.id)}\r\n                        className=\"text-red-500 text-sm\"\r\n                      >\r\n                        削除\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}