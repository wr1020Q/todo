{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hinan\\\\todo-app\\\\client\\\\src\\\\component\\\\TaskInput.jsx\",\n  _s = $RefreshSig$();\nimport { TaskContext } from \"../context/TaskContext\";\nimport { useContext } from \"react\";\nimport TaskForm from \"./TaskForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskInput({\n  categories\n}) {\n  _s();\n  const {\n    state,\n    dispatch\n  } = useContext(TaskContext);\n  const {\n    dueDate,\n    categoryFilter\n  } = state;\n  console.log('現在のcategoryFilter,INPUT:', categoryFilter);\n  console.log('現在のcategories,INPUT:', categories);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      categories: categories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u30AB\\u30C6\\u30B4\\u30EA\\u30FC\\u3067\\u7D5E\\u308A\\u8FBC\\u307F\\uFF1A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), Array.isArray(categories) ? categories.map(category => /*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        marginRight: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: categoryFilter.includes(category._id),\n        onChange: () => dispatch({\n          type: \"TOGGLE_CATEGORY_FILTER\",\n          payload: category._id\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), category.title]\n    }, category._id + \"-checkbox\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)) : /*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        marginRight: '10px'\n      },\n      children: \"\\u30AB\\u30C6\\u30B4\\u30EA\\u306A\\u3057\"\n    }, \"no-category-checkbox\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskInput, \"QMdo+h1+fLbTriZQ0QN6uukzyow=\");\n_c = TaskInput;\n;\nvar _c;\n$RefreshReg$(_c, \"TaskInput\");","map":{"version":3,"names":["TaskContext","useContext","TaskForm","jsxDEV","_jsxDEV","TaskInput","categories","_s","state","dispatch","dueDate","categoryFilter","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","map","category","style","marginRight","type","checked","includes","_id","onChange","payload","title","_c","$RefreshReg$"],"sources":["C:/Users/hinan/todo-app/client/src/component/TaskInput.jsx"],"sourcesContent":["import { TaskContext } from \"../context/TaskContext\";\r\nimport { useContext } from \"react\"; \r\nimport TaskForm from \"./TaskForm\";\r\n\r\n\r\nexport default function TaskInput({ \r\n  categories,  \r\n}) {\r\n  const { state, dispatch } = useContext(TaskContext);\r\n  const { dueDate ,categoryFilter} = state;\r\n\r\n\r\n\r\n  console.log('現在のcategoryFilter,INPUT:', categoryFilter); \r\n  console.log('現在のcategories,INPUT:', categories);\r\n\r\n  return (\r\n    <div className=\"flex mb-4\">\r\n      <TaskForm categories = {categories}/>\r\n      <p>カテゴリーで絞り込み：</p>\r\n          {Array.isArray(categories) ?(categories.map((category) => (\r\n            <label key={category._id + \"-checkbox\"} style={{ marginRight: '10px' }}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={categoryFilter.includes(category._id)}\r\n              onChange={() =>dispatch({ type: \"TOGGLE_CATEGORY_FILTER\", payload: category._id })}\r\n            />\r\n              {category.title}\r\n            </label>\r\n          ))) : (\r\n            <label key=\"no-category-checkbox\" style={{ marginRight: '10px' }}>\r\n              カテゴリなし\r\n            </label>\r\n          )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,wBAAwB;AACpD,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlC,eAAe,SAASC,SAASA,CAAC;EAChCC;AACF,CAAC,EAAE;EAAAC,EAAA;EACD,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGR,UAAU,CAACD,WAAW,CAAC;EACnD,MAAM;IAAEU,OAAO;IAAEC;EAAc,CAAC,GAAGH,KAAK;EAIxCI,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,cAAc,CAAC;EACvDC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEP,UAAU,CAAC;EAE/C,oBACEF,OAAA;IAAKU,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBX,OAAA,CAACF,QAAQ;MAACI,UAAU,EAAIA;IAAW;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACrCf,OAAA;MAAAW,QAAA,EAAG;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACbC,KAAK,CAACC,OAAO,CAACf,UAAU,CAAC,GAAGA,UAAU,CAACgB,GAAG,CAAEC,QAAQ,iBACnDnB,OAAA;MAAwCoB,KAAK,EAAE;QAAEC,WAAW,EAAE;MAAO,CAAE;MAAAV,QAAA,gBACvEX,OAAA;QACEsB,IAAI,EAAC,UAAU;QACfC,OAAO,EAAEhB,cAAc,CAACiB,QAAQ,CAACL,QAAQ,CAACM,GAAG,CAAE;QAC/CC,QAAQ,EAAEA,CAAA,KAAKrB,QAAQ,CAAC;UAAEiB,IAAI,EAAE,wBAAwB;UAAEK,OAAO,EAAER,QAAQ,CAACM;QAAI,CAAC;MAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpF,CAAC,EACCI,QAAQ,CAACS,KAAK;IAAA,GANLT,QAAQ,CAACM,GAAG,GAAG,WAAW;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAO/B,CACR,CAAC,gBACAf,OAAA;MAAkCoB,KAAK,EAAE;QAAEC,WAAW,EAAE;MAAO,CAAE;MAAAV,QAAA,EAAC;IAElE,GAFW,sBAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE1B,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACZ,EAAA,CA/BuBF,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AA+BhC;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}