{"ast":null,"code":"import apiClient from'./apiClient';export const getTasks=async()=>{try{const res=await apiClient.get('/tasks');return res.data;}catch(err){console.error('タスク取得エラー:',err);throw err;}};export const addTask=async taskDate=>{try{const res=await apiClient.post('/tasks',taskDate);return res.data;}catch(err){console.error('タスク追加エラー:',err);throw err;}};export const updateTaskAPI=async(id,updatedData)=>{try{await apiClient.patch(`/tasks/${id}`,updatedData);}catch(err){console.error('タスク更新エラー:',err);throw err;}};export const deleteTaskAPI=async id=>{try{await apiClient.delete(`/tasks/${id}`);}catch(err){console.error('タスク削除エラー:',err);throw err;}};//カテゴリー\nexport const getCategories=async()=>{try{const res=await apiClient.get('/categories');return res.data;}catch(err){console.error('カテゴリー取得エラー:',err);throw err;}};export const addCategoryAPI=async title=>{try{await apiClient.post('/categories',{title});}catch(err){console.error('カテゴリー追加エラー:',err);throw err;}};export const updateCategory=async(id,updatedData)=>{try{await apiClient.put(`/categories/${id}`,updatedData);}catch(err){console.error('カテゴリー更新エラー:',err);throw err;}};export const deleteCategory=async id=>{try{await apiClient.delete(`/categories/${id}`);}catch(err){console.error('カテゴリー削除エラー:',err);throw err;}};","map":{"version":3,"names":["apiClient","getTasks","res","get","data","err","console","error","addTask","taskDate","post","updateTaskAPI","id","updatedData","patch","deleteTaskAPI","delete","getCategories","addCategoryAPI","title","updateCategory","put","deleteCategory"],"sources":["C:/Users/hinan/todo-app/client/src/services/TaskService.js"],"sourcesContent":["import apiClient from './apiClient';\r\n\r\nexport const getTasks = async () => {\r\ntry {\r\n    const res = await apiClient.get('/tasks');\r\n    return res.data;\r\n  } catch (err) {\r\n    console.error('タスク取得エラー:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const addTask = async (taskDate) => {\r\n  try {\r\n    const res = await apiClient.post('/tasks', taskDate);\r\n    return res.data;\r\n  } catch (err) {\r\n    console.error('タスク追加エラー:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const updateTaskAPI = async (id, updatedData) => {\r\n  try {\r\n    await apiClient.patch(`/tasks/${id}`, updatedData);\r\n  } catch (err) {\r\n    console.error('タスク更新エラー:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const deleteTaskAPI = async (id) => {\r\n  try {\r\n    await apiClient.delete(`/tasks/${id}`);\r\n  } catch (err) {\r\n    console.error('タスク削除エラー:', err);\r\n    throw err;\r\n  }\r\n  \r\n};\r\n\r\n//カテゴリー\r\nexport const getCategories = async () => {\r\ntry {\r\n    const res = await apiClient.get('/categories');\r\n    return res.data;\r\n  } catch (err) {\r\n    console.error('カテゴリー取得エラー:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const addCategoryAPI = async (title) => {\r\ntry {\r\n    await apiClient.post('/categories', { title });\r\n  } catch (err) {\r\n    console.error('カテゴリー追加エラー:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const updateCategory = async (id, updatedData) => {\r\ntry {\r\n    await apiClient.put(`/categories/${id}`, updatedData);\r\n  } catch (err) {\r\n    console.error('カテゴリー更新エラー:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const deleteCategory = async (id) => {\r\n  try {\r\n    await apiClient.delete(`/categories/${id}`);\r\n  } catch (err) {\r\n    console.error('カテゴリー削除エラー:', err);\r\n    throw err;\r\n  }\r\n  \r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}