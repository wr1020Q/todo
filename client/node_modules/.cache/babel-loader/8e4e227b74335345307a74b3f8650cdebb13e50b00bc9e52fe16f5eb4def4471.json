{"ast":null,"code":"function isCommonAssetRequest(request) {\n  const url = new URL(request.url);\n  if (url.protocol === \"file:\") {\n    return true;\n  }\n  if (/(fonts\\.googleapis\\.com)/.test(url.hostname)) {\n    return true;\n  }\n  if (/node_modules/.test(url.pathname)) {\n    return true;\n  }\n  if (url.pathname.includes(\"@vite\")) {\n    return true;\n  }\n  return /\\.(s?css|less|m?jsx?|m?tsx?|html|ttf|otf|woff|woff2|eot|gif|jpe?g|png|avif|webp|svg|mp4|webm|ogg|mov|mp3|wav|ogg|flac|aac|pdf|txt|csv|json|xml|md|zip|tar|gz|rar|7z)$/i.test(url.pathname);\n}\nexport { isCommonAssetRequest };","map":{"version":3,"names":["isCommonAssetRequest","request","url","URL","protocol","test","hostname","pathname","includes"],"sources":["C:\\Users\\hinan\\todo-app\\client\\node_modules\\msw\\src\\core\\isCommonAssetRequest.ts"],"sourcesContent":["/**\n * Determines if the given request is a static asset request.\n * Useful when deciding which unhandled requests to ignore.\n * @note Despite being ignored, you can still intercept and mock\n * static assets by creating request handlers for them.\n *\n * @example\n * import { isCommonAssetRequest } from 'msw'\n *\n * await worker.start({\n *   onUnhandledRequest(request, print) {\n *     if (!isCommonAssetRequest(request)) {\n *       print.warning()\n *     }\n *   }\n * })\n */\nexport function isCommonAssetRequest(request: Request): boolean {\n  const url = new URL(request.url)\n\n  // Ignore certain protocols.\n  if (url.protocol === 'file:') {\n    return true\n  }\n\n  // Ignore static assets hosts.\n  if (/(fonts\\.googleapis\\.com)/.test(url.hostname)) {\n    return true\n  }\n\n  // Ignore node modules served over HTTP.\n  if (/node_modules/.test(url.pathname)) {\n    return true\n  }\n\n  // Ignore internal Vite requests, like \"/@vite/client\".\n  if (url.pathname.includes('@vite')) {\n    return true\n  }\n\n  // Ignore common static assets.\n  return /\\.(s?css|less|m?jsx?|m?tsx?|html|ttf|otf|woff|woff2|eot|gif|jpe?g|png|avif|webp|svg|mp4|webm|ogg|mov|mp3|wav|ogg|flac|aac|pdf|txt|csv|json|xml|md|zip|tar|gz|rar|7z)$/i.test(\n    url.pathname,\n  )\n}\n"],"mappings":"AAiBO,SAASA,qBAAqBC,OAAA,EAA2B;EAC9D,MAAMC,GAAA,GAAM,IAAIC,GAAA,CAAIF,OAAA,CAAQC,GAAG;EAG/B,IAAIA,GAAA,CAAIE,QAAA,KAAa,SAAS;IAC5B,OAAO;EACT;EAGA,IAAI,2BAA2BC,IAAA,CAAKH,GAAA,CAAII,QAAQ,GAAG;IACjD,OAAO;EACT;EAGA,IAAI,eAAeD,IAAA,CAAKH,GAAA,CAAIK,QAAQ,GAAG;IACrC,OAAO;EACT;EAGA,IAAIL,GAAA,CAAIK,QAAA,CAASC,QAAA,CAAS,OAAO,GAAG;IAClC,OAAO;EACT;EAGA,OAAO,yKAAyKH,IAAA,CAC9KH,GAAA,CAAIK,QACN;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}