{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { getTasks, addCategoryAPI, getCategories } from '../services/TaskService';\nexport const useCategories = () => {\n  _s();\n  const [categories, setCategories] = useState(async () => {\n    // const saved = localStorage.getItem(\"categories\");\n    const catRes = await getCategories();\n    return catRes;\n  });\n  const [selectedCategory, setSelectedCategory] = useState(categories[0] || \"\");\n  const [newCategory, setNewCategory] = useState(\"\");\n  const addCategory = async () => {\n    if (newCategory && !categories.includes(newCategory)) {\n      const res = await addCategoryAPI(newCategory);\n      setCategories([...categories, res]);\n      setNewCategory(\"\");\n    }\n  };\n  return {\n    categories,\n    setCategories,\n    selectedCategory,\n    setSelectedCategory,\n    newCategory,\n    setNewCategory,\n    addCategory\n  };\n};\n_s(useCategories, \"keSOopc5+lqOuAc1qPZ99tBS6wY=\");","map":{"version":3,"names":["useState","getTasks","addCategoryAPI","getCategories","useCategories","_s","categories","setCategories","catRes","selectedCategory","setSelectedCategory","newCategory","setNewCategory","addCategory","includes","res"],"sources":["C:/Users/hinan/todo-app/client/src/hooks/useCategories.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { getTasks, addCategoryAPI, getCategories,} from '../services/TaskService';\r\n\r\n\r\n\r\nexport const useCategories = () => {\r\n    const [categories, setCategories] = useState(async() => {\r\n    // const saved = localStorage.getItem(\"categories\");\r\n    const catRes = await getCategories();\r\n    return catRes\r\n  });\r\n    const [selectedCategory, setSelectedCategory] = useState(categories[0] || \"\");\r\n    const [newCategory, setNewCategory] = useState(\"\");\r\n\r\n    const addCategory = async() => {\r\n        if (newCategory && !categories.includes(newCategory)) {\r\n          const res = await addCategoryAPI(newCategory);\r\n          setCategories([...categories, res]);\r\n          setNewCategory(\"\"); \r\n        }\r\n      };\r\n    \r\n      return{\r\n        categories,\r\n        setCategories,\r\n        selectedCategory,\r\n        setSelectedCategory,\r\n        newCategory,\r\n        setNewCategory,\r\n        addCategory,\r\n      }\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,EAAEC,cAAc,EAAEC,aAAa,QAAQ,yBAAyB;AAIjF,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,YAAW;IACxD;IACA,MAAMQ,MAAM,GAAG,MAAML,aAAa,CAAC,CAAC;IACpC,OAAOK,MAAM;EACf,CAAC,CAAC;EACA,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAACM,UAAU,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;EAC7E,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMa,WAAW,GAAG,MAAAA,CAAA,KAAW;IAC3B,IAAIF,WAAW,IAAI,CAACL,UAAU,CAACQ,QAAQ,CAACH,WAAW,CAAC,EAAE;MACpD,MAAMI,GAAG,GAAG,MAAMb,cAAc,CAACS,WAAW,CAAC;MAC7CJ,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAES,GAAG,CAAC,CAAC;MACnCH,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC;EAED,OAAM;IACJN,UAAU;IACVC,aAAa;IACbE,gBAAgB;IAChBC,mBAAmB;IACnBC,WAAW;IACXC,cAAc;IACdC;EACF,CAAC;AACP,CAAC;AAAAR,EAAA,CA1BYD,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}