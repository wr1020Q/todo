{"ast":null,"code":"import{createContext,useReducer,useEffect,useState}from\"react\";import{getCategories,addCategoryAPI}from\"../services/TaskService\";import{jsx as _jsx}from\"react/jsx-runtime\";export const TaskContext=/*#__PURE__*/createContext();const initialState={tasks:[],editText:\"\",// dueDate: \"\",\nisLoading:true,categoryFilter:[],sortBy:\"deadlineAsc\"};const taskReducer=(state,action)=>{switch(action.type){case\"INIT_TASKS\":return{...state,tasks:action.payload,isLoading:false};case\"ADD_TASK\":return{...state,tasks:[...state.tasks,action.payload]};case\"DELETE_TASK\":return{...state,tasks:state.tasks.filter(task=>task.id!==action.payload.id)};case\"START_EDITING\":return{...state,tasks:state.tasks.map(task=>task.id===action.payload.id?{...task,isEditing:true}:task),editText:action.payload.text};case\"SAVE_EDIT\":return{...state,tasks:state.tasks.map(task=>task.id===action.payload.id?{...task,text:state.editText,isEditing:false}:task),editText:\"\"};case\"TOGGLE_TASK\":return{...state,tasks:state.tasks.map(task=>task.id===action.payload.id?{...task,completed:!task.completed}:task),editText:\"\"};case\"UPDATE_PRIORITY\":return{...state,tasks:state.tasks.map(task=>task.id===action.payload.id?{...task,priority:action.payload.newPriority}:task)};case\"SET_DUE_DATE\":return{...state,dueDate:action.payload};case\"UPDATE_DUE_DATE\":return{...state,tasks:state.tasks.map(task=>task.id===action.payload.id?{...task,dueDate:action.payload.dueDate}:task)};case\"TOGGLE_CATEGORY_FILTER\":const{payload:category}=action;const isSelected=state.categoryFilter.includes(category);return{...state,categoryFilter:isSelected?state.categoryFilter.filter(c=>c!==category)// 解除\n:[...state.categoryFilter,category]// 追加\n};case'SET_CATEGORY_FILTER':console.log('新しいカテゴリフィルター:',action.payload);return{...state,categoryFilter:action.payload};case\"SET_SORT\":return{...state,sortBy:action.payload};default:return state;}};export const TaskProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(taskReducer,initialState);const[categories,setCategories]=useState([]);const[selectedCategory,setSelectedCategory]=useState(\"\");const[newCategory,setNewCategory]=useState(\"\");// 初期取得\nuseEffect(()=>{const fetchCategories=async()=>{try{var _res$;const res=await getCategories();setCategories(res);setSelectedCategory(((_res$=res[0])===null||_res$===void 0?void 0:_res$.id)||\"\");}catch(err){console.error(\"カテゴリ取得失敗:\",err);}};fetchCategories();},[]);// const fetchCategories = useCallback(async () => {\n//   try {\n//     const data = await getCategories();\n//     setCategories(data)\n//   } catch (err) {\n//     console.error(\"カテゴリー取得失敗:\", err);\n//   }\n// }, [dispatch]);\nconst addCategory=async()=>{if(newCategory&&!categories.some(c=>c.title===newCategory)){try{await addCategoryAPI(newCategory);const updated=await getCategories();setCategories(updated);setNewCategory(\"\");}catch(err){console.error(\"カテゴリ追加失敗:\",err);}}};return/*#__PURE__*/_jsx(TaskContext.Provider,{value:{state,dispatch,categories,setCategories,selectedCategory,setSelectedCategory,newCategory,setNewCategory,addCategory},children:children});};","map":{"version":3,"names":["createContext","useReducer","useEffect","useState","getCategories","addCategoryAPI","jsx","_jsx","TaskContext","initialState","tasks","editText","isLoading","categoryFilter","sortBy","taskReducer","state","action","type","payload","filter","task","id","map","isEditing","text","completed","priority","newPriority","dueDate","category","isSelected","includes","c","console","log","TaskProvider","_ref","children","dispatch","categories","setCategories","selectedCategory","setSelectedCategory","newCategory","setNewCategory","fetchCategories","_res$","res","err","error","addCategory","some","title","updated","Provider","value"],"sources":["C:/Users/hinan/todo-app/client/src/context/TaskContext.jsx"],"sourcesContent":["import { createContext, useReducer,useEffect, useState} from \"react\";\r\nimport { getCategories, addCategoryAPI } from \"../services/TaskService\";\r\nexport const TaskContext = createContext();\r\n\r\nconst initialState = {\r\n  tasks: [],\r\n  editText: \"\",\r\n  // dueDate: \"\",\r\n  isLoading: true,\r\n  categoryFilter: [],\r\n  sortBy: \"deadlineAsc\", \r\n};\r\n\r\nconst taskReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case \"INIT_TASKS\":\r\n            return {\r\n                ...state,\r\n                tasks: action.payload,\r\n                isLoading: false\r\n            };\r\n        case \"ADD_TASK\":\r\n            return {\r\n              ...state,\r\n              tasks: [...state.tasks,action.payload],\r\n            };\r\n        case \"DELETE_TASK\":\r\n          return{\r\n              ...state,\r\n              tasks: state.tasks.filter(task => task.id !== action.payload.id)\r\n          };\r\n        case \"START_EDITING\":\r\n            return {\r\n              ...state,\r\n              tasks: state.tasks.map(task =>\r\n                task.id === action.payload.id\r\n                  ? { ...task, isEditing: true }\r\n                  : task\r\n              ),\r\n              editText: action.payload.text,\r\n            };\r\n        case \"SAVE_EDIT\":\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map(task =>\r\n                task.id === action.payload.id\r\n                    ? { ...task, text: state.editText, isEditing: false }\r\n                    : task\r\n                ),\r\n                  editText:\"\"\r\n            };\r\n        case \"TOGGLE_TASK\":\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map(task =>\r\n                    task.id === action.payload.id\r\n                    ? { ...task, completed: !task.completed }\r\n                    : task\r\n                ),\r\n                    editText:\"\"\r\n            };\r\n        case \"UPDATE_PRIORITY\":\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map(task =>\r\n                task.id === action.payload.id\r\n                    ? { ...task, priority: action.payload.newPriority }\r\n                    : task\r\n                ),\r\n            };\r\n        case \"SET_DUE_DATE\":\r\n              return {\r\n                  ...state,\r\n                  dueDate: action.payload,\r\n              };\r\n        case \"UPDATE_DUE_DATE\":\r\n              return {\r\n                  ...state,\r\n                  tasks: state.tasks.map(task =>\r\n                    task.id === action.payload.id\r\n                      ? { ...task, dueDate: action.payload.dueDate }\r\n                      : task\r\n                  )\r\n                };\r\n        case \"TOGGLE_CATEGORY_FILTER\":\r\n              const { payload: category } = action;\r\n              const isSelected = state.categoryFilter.includes(category);\r\n              return {\r\n                ...state,\r\n                categoryFilter: isSelected\r\n                ? state.categoryFilter.filter(c => c !== category) // 解除\r\n                : [...state.categoryFilter, category],             // 追加\r\n          };\r\n        case 'SET_CATEGORY_FILTER':\r\n          console.log('新しいカテゴリフィルター:', action.payload); \r\n            return {\r\n                ...state,\r\n                categoryFilter: action.payload,\r\n            };\r\n        case \"SET_SORT\":\r\n            return {\r\n                ...state,\r\n                sortBy: action.payload,\r\n            };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export const TaskProvider = ({ children }) => {\r\n\r\n    const [state, dispatch] = useReducer(taskReducer, initialState);\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const [newCategory, setNewCategory] = useState(\"\");\r\n\r\n  // 初期取得\r\n  useEffect(() => {\r\n    const fetchCategories = async () => {\r\n      try {\r\n        const res = await getCategories();\r\n        setCategories(res);\r\n        setSelectedCategory(res[0]?.id || \"\");\r\n      } catch (err) {\r\n        console.error(\"カテゴリ取得失敗:\", err);\r\n      }\r\n    };\r\n    fetchCategories();\r\n  }, []);\r\n\r\n    // const fetchCategories = useCallback(async () => {\r\n    //   try {\r\n    //     const data = await getCategories();\r\n    //     setCategories(data)\r\n    //   } catch (err) {\r\n    //     console.error(\"カテゴリー取得失敗:\", err);\r\n    //   }\r\n    // }, [dispatch]);\r\n\r\n  const addCategory = async () => {\r\n    if (newCategory && !categories.some(c => c.title === newCategory)) {\r\n      try {\r\n        await addCategoryAPI(newCategory);\r\n        const updated = await getCategories();\r\n        setCategories(updated);\r\n        setNewCategory(\"\");\r\n      } catch (err) {\r\n        console.error(\"カテゴリ追加失敗:\", err);\r\n      }\r\n    }\r\n  };\r\n       \r\nreturn (\r\n       <TaskContext.Provider\r\n      value={{\r\n        state,\r\n        dispatch,\r\n        categories,\r\n        setCategories,\r\n        selectedCategory,\r\n        setSelectedCategory,\r\n        newCategory,\r\n        setNewCategory,\r\n        addCategory,\r\n      }}\r\n    >\r\n      {children}\r\n    </TaskContext.Provider>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}