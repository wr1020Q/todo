{"ast":null,"code":"function getTimestamp(options) {\n  const now = /* @__PURE__ */new Date();\n  const timestamp = `${now.getHours().toString().padStart(2, \"0\")}:${now.getMinutes().toString().padStart(2, \"0\")}:${now.getSeconds().toString().padStart(2, \"0\")}`;\n  if (options?.milliseconds) {\n    return `${timestamp}.${now.getMilliseconds().toString().padStart(3, \"0\")}`;\n  }\n  return timestamp;\n}\nexport { getTimestamp };","map":{"version":3,"names":["getTimestamp","options","now","Date","timestamp","getHours","toString","padStart","getMinutes","getSeconds","milliseconds","getMilliseconds"],"sources":["C:\\Users\\hinan\\todo-app\\client\\node_modules\\msw\\src\\core\\utils\\logging\\getTimestamp.ts"],"sourcesContent":["interface GetTimestampOptions {\n  milliseconds?: boolean\n}\n\n/**\n * Returns a timestamp string in a \"HH:MM:SS\" format.\n */\nexport function getTimestamp(options?: GetTimestampOptions): string {\n  const now = new Date()\n  const timestamp = `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}:${now.getSeconds().toString().padStart(2, '0')}`\n\n  if (options?.milliseconds) {\n    return `${timestamp}.${now.getMilliseconds().toString().padStart(3, '0')}`\n  }\n\n  return timestamp\n}\n"],"mappings":"AAOO,SAASA,aAAaC,OAAA,EAAuC;EAClE,MAAMC,GAAA,GAAM,mBAAIC,IAAA,CAAK;EACrB,MAAMC,SAAA,GAAY,GAAGF,GAAA,CAAIG,QAAA,CAAS,EAAEC,QAAA,CAAS,EAAEC,QAAA,CAAS,GAAG,GAAG,CAAC,IAAIL,GAAA,CAAIM,UAAA,CAAW,EAAEF,QAAA,CAAS,EAAEC,QAAA,CAAS,GAAG,GAAG,CAAC,IAAIL,GAAA,CAAIO,UAAA,CAAW,EAAEH,QAAA,CAAS,EAAEC,QAAA,CAAS,GAAG,GAAG,CAAC;EAE/J,IAAIN,OAAA,EAASS,YAAA,EAAc;IACzB,OAAO,GAAGN,SAAS,IAAIF,GAAA,CAAIS,eAAA,CAAgB,EAAEL,QAAA,CAAS,EAAEC,QAAA,CAAS,GAAG,GAAG,CAAC;EAC1E;EAEA,OAAOH,SAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}