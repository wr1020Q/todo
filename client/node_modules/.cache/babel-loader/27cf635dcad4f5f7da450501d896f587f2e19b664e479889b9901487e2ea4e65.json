{"ast":null,"code":"import{useMemo,useState}from\"react\";import{updateTaskAPI}from\"../services/TaskService\";import{useContext}from\"react\";import{TaskContext}from\"../context/TaskContext\";import{deleteTaskAPI,updateCategoryAPI}from\"../services/TaskService\";import{showSuccess,showError}from\"../utils/toast\";import{updateTaskSchema,updatePrioritySchema,updateDueDateSchema,updateCompletedSchema,addCategorySchema}from'../utils/schema';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faTrash}from'@fortawesome/free-solid-svg-icons';import TaskItem from\"./TaskItem\";import{useAuth}from'../context/AuthContext';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";export default function TaskList(_ref){let{tasks=[],categories=[],setEditText}=_ref;const{state,dispatch,setCategories,removeCategory}=useContext(TaskContext);const{categoryFilter,editText}=state;const[editingTaskId,setEditingTaskId]=useState(null);const[editingCategoryId,setEditingCategoryId]=useState(null);const[categoryEdit,setCategoryEdit]=useState(\"\");const[errorMessage,setErrorMessage]=useState(\"\");const[errorMessageCat,setErrorMessageCat]=useState(\"\");const{user}=useAuth();console.log(\"受け取ったLIST内 tasks:\",tasks);console.log(\"受け取ったLIST内 categories:\",categories);console.log(\"受け取ったLIST内 categoryFilter:\",categoryFilter);const startEditing=(taskId,currentText)=>{setEditingTaskId(taskId);setEditText(currentText);setErrorMessage(\"\");};const startEditingCat=(catId,currentText)=>{setEditingCategoryId(catId);setCategoryEdit(currentText);setErrorMessageCat(\"\");};const toggleTask=async(id,newcompleted)=>{try{await updateCompletedSchema.validate({completed:newcompleted});console.log(\"newcompleted\",newcompleted);await updateTaskAPI(id,{completed:newcompleted});dispatch({type:\"TOGGLE_TASK\",payload:{id}});}catch(err){if(err.name===\"ValidationError\"){showError(err.message);return;}showError(\"タスクの状態を更新することができませんでした\");console.error(err);}};const updatePriority=async(id,newPriority)=>{try{await updatePrioritySchema.validate({priority:newPriority});await updateTaskAPI(id,{priority:newPriority});dispatch({type:\"UPDATE_PRIORITY\",payload:{id,newPriority}});showSuccess(\"タスクの優先度を更新しました\");}catch(err){if(err.name===\"ValidationError\"){showError(err.message);return;}showError(\"タスクの優先度を更新することができませんでした\");console.error(err);}};const updateDueDate=async(id,dueDate)=>{try{await updateDueDateSchema.validate({dueDate:dueDate});await updateTaskAPI(id,{dueDate:dueDate});dispatch({type:\"UPDATE_DUE_DATE\",payload:{id,dueDate}});showSuccess(\"タスクの期限を更新しました\");}catch(err){if(err.name===\"ValidationError\"){showError(err.message);return;}showError(\"タスクの期限を更新することができませんでした\");console.error(err);}};//タスク更新\nconst handleUpdateTask=async(taskId,updatedFields)=>{try{console.log(\"List Task更新\",taskId,updatedFields);await updateTaskSchema.validate({text:updatedFields});await updateTaskAPI(taskId,{text:updatedFields});dispatch({type:\"SAVE_EDIT\",payload:{id:taskId,text:updatedFields}});setEditingTaskId(null);setEditText(\"\");showSuccess(\"タスクを更新しました\");}catch(err){if(err.name===\"ValidationError\"){setErrorMessage(err.message);return;// ここで処理を止めるの\n}showError(\"タスクの更新ができませんでした\");console.error(err);}};//カテゴリー更新\nconst handleUpdateCategory=async(catId,updatedFields)=>{try{await addCategorySchema.validate({title:updatedFields});const updated=await updateCategoryAPI(catId,updatedFields);setCategories(preCategories=>preCategories.map(cat=>cat._id===updated.data._id?{...cat,...updated.data}:cat));setEditingCategoryId(null);setCategoryEdit(\"\");showSuccess(\"カテゴリーを更新しました\");}catch(err){if(err.name===\"ValidationError\"){setErrorMessageCat(err.message);return;}showError(\"カテゴリーの更新ができませんでした\");console.error(err);}};const deleteTask=async id=>{try{await deleteTaskAPI(id);console.log(\"DELETE_TASK\",id);dispatch({type:\"DELETE_TASK\",payload:{id}});}catch(err){showError(\"タスクの削除ができませんでした\");console.error(\"タスクの削除に失敗しました:\",err);}};const filteredTasks=useMemo(()=>{return Array.isArray(tasks)?tasks.filter(task=>{var _task$category$_id,_task$category;const taskCatId=(_task$category$_id=(_task$category=task.category)===null||_task$category===void 0?void 0:_task$category._id)!==null&&_task$category$_id!==void 0?_task$category$_id:task.category;return categoryFilter.length===0||categoryFilter.includes(String(taskCatId));}):[];},[tasks,categoryFilter]);return/*#__PURE__*/_jsx(\"div\",{children:categories.map(cat=>{const tasksInCategory=filteredTasks.filter(task=>{var _task$category2;const id=(_task$category2=task.category)===null||_task$category2===void 0?void 0:_task$category2._id;return String(id)===String(cat._id);});if(tasksInCategory.length===0)return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-between px-2 mt-4\",children:editingCategoryId===cat._id?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:categoryEdit,onChange:e=>setCategoryEdit(e.target.value),onBlur:()=>handleUpdateCategory(cat._id,categoryEdit),onKeyDown:e=>{if(e.key===\"Enter\"){e.preventDefault();handleUpdateCategory(cat._id,categoryEdit);}},autoFocus:true,className:\"flex-grow\"}),errorMessageCat&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500 text-xs italic ml-2\",children:errorMessageCat})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{onDoubleClick:()=>{if(cat.title!==\"未分類\"&&(!user||cat.user===user.id)){startEditingCat(cat._id,cat.title);}},className:\"font-bold text-lg\",children:cat.title}),cat.title!==\"未分類\"&&(!user||cat.user===user.id)&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>removeCategory(cat._id,cat.title),className:\"text-red-500 text-sm\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faTrash})})]})}),/*#__PURE__*/_jsx(\"ul\",{children:tasksInCategory.map(task=>/*#__PURE__*/_jsx(TaskItem,{task:task,editingTaskId:editingTaskId,editText:editText,startEditing:startEditing,toggleTask:toggleTask,updatePriority:updatePriority,updateDueDate:updateDueDate,handleUpdateTask:handleUpdateTask,deleteTask:deleteTask,errorMessage:errorMessage},task._id))})]},cat._id+\"input\");})});}","map":{"version":3,"names":["useMemo","useState","updateTaskAPI","useContext","TaskContext","deleteTaskAPI","updateCategoryAPI","showSuccess","showError","updateTaskSchema","updatePrioritySchema","updateDueDateSchema","updateCompletedSchema","addCategorySchema","FontAwesomeIcon","faTrash","TaskItem","useAuth","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","TaskList","_ref","tasks","categories","setEditText","state","dispatch","setCategories","removeCategory","categoryFilter","editText","editingTaskId","setEditingTaskId","editingCategoryId","setEditingCategoryId","categoryEdit","setCategoryEdit","errorMessage","setErrorMessage","errorMessageCat","setErrorMessageCat","user","console","log","startEditing","taskId","currentText","startEditingCat","catId","toggleTask","id","newcompleted","validate","completed","type","payload","err","name","message","error","updatePriority","newPriority","priority","updateDueDate","dueDate","handleUpdateTask","updatedFields","text","handleUpdateCategory","title","updated","preCategories","map","cat","_id","data","deleteTask","filteredTasks","Array","isArray","filter","task","_task$category$_id","_task$category","taskCatId","category","length","includes","String","children","tasksInCategory","_task$category2","className","value","onChange","e","target","onBlur","onKeyDown","key","preventDefault","autoFocus","onDoubleClick","onClick","icon"],"sources":["C:/Users/hinan/todo-app/client/src/component/TaskList.jsx"],"sourcesContent":["import { useMemo ,useState} from \"react\";\r\n\r\nimport { updateTaskAPI } from \"../services/TaskService\";\r\nimport { useContext } from \"react\";\r\nimport { TaskContext } from \"../context/TaskContext\";\r\nimport { deleteTaskAPI ,updateCategoryAPI} from \"../services/TaskService\"; \r\nimport {showSuccess,showError} from \"../utils/toast\";\r\nimport { updateTaskSchema,updatePrioritySchema,updateDueDateSchema,updateCompletedSchema,addCategorySchema } from '../utils/schema';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport TaskItem from \"./TaskItem\";\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nexport default function TaskList({ tasks = [],categories = [],setEditText }) {\r\n  \r\n  const { state, dispatch ,setCategories,removeCategory} = useContext(TaskContext);\r\n  const { categoryFilter,editText} = state;\r\n  const [editingTaskId, setEditingTaskId] = useState(null);\r\n  const [editingCategoryId, setEditingCategoryId] = useState(null);\r\n  const [categoryEdit, setCategoryEdit] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [errorMessageCat, setErrorMessageCat] = useState(\"\");\r\n   const { user  } = useAuth();\r\n\r\n  console.log(\"受け取ったLIST内 tasks:\", tasks);\r\n  console.log(\"受け取ったLIST内 categories:\", categories);\r\n  console.log(\"受け取ったLIST内 categoryFilter:\", categoryFilter);\r\n\r\n  const startEditing = (taskId, currentText) => {\r\n    setEditingTaskId(taskId);\r\n    setEditText(currentText);\r\n    setErrorMessage(\"\");\r\n  };\r\n\r\n  const startEditingCat = (catId, currentText) => {\r\n    setEditingCategoryId(catId);\r\n    setCategoryEdit(currentText);\r\n    setErrorMessageCat(\"\");\r\n  };\r\n\r\n  const toggleTask=async(id,newcompleted)=>{\r\n    try {\r\n          await updateCompletedSchema.validate({ completed: newcompleted });\r\n          console.log(\"newcompleted\",newcompleted)\r\n          await updateTaskAPI(id, { completed: newcompleted });\r\n          dispatch({ type: \"TOGGLE_TASK\", payload: { id } })\r\n    } catch (err) {\r\n        if (err.name === \"ValidationError\") {\r\n          showError(err.message);  \r\n          return; \r\n        }\r\n        showError(\"タスクの状態を更新することができませんでした\");\r\n        console.error(err);\r\n    }\r\n  };\r\n\r\n  const  updatePriority =async (id, newPriority) =>{\r\n    try { \r\n          await updatePrioritySchema.validate({ priority: newPriority });\r\n          await updateTaskAPI(id, { priority: newPriority });\r\n          dispatch({ type: \"UPDATE_PRIORITY\", payload: { id, newPriority } })\r\n          showSuccess(\"タスクの優先度を更新しました\")\r\n    } catch (err) {\r\n        if (err.name === \"ValidationError\") {\r\n          showError(err.message);  \r\n          return; \r\n        }\r\n        showError(\"タスクの優先度を更新することができませんでした\");\r\n        console.error(err);\r\n    }\r\n  };\r\n  \r\n  const  updateDueDate=async(id, dueDate) =>{\r\n    try { \r\n          await updateDueDateSchema.validate({ dueDate: dueDate });\r\n          await updateTaskAPI(id, { dueDate: dueDate });\r\n          dispatch({ type: \"UPDATE_DUE_DATE\", payload: { id, dueDate } })\r\n          showSuccess(\"タスクの期限を更新しました\")\r\n    } catch (err) {\r\n        if (err.name === \"ValidationError\") {\r\n          showError(err.message); \r\n          return; \r\n        }\r\n        showError(\"タスクの期限を更新することができませんでした\");\r\n        console.error(err);\r\n    }\r\n  };\r\n    \r\n  //タスク更新\r\n  const handleUpdateTask = async (taskId, updatedFields) => {\r\n    try {\r\n          console.log(\"List Task更新\",taskId,updatedFields)\r\n          await updateTaskSchema.validate({ text: updatedFields });\r\n          await updateTaskAPI(taskId, {text:updatedFields} );\r\n          dispatch({type: \"SAVE_EDIT\", payload: { id: taskId, text: updatedFields } });\r\n          setEditingTaskId(null);\r\n          setEditText(\"\");\r\n          showSuccess(\"タスクを更新しました\")\r\n    } catch (err) {\r\n        if (err.name === \"ValidationError\") {\r\n          setErrorMessage(err.message); \r\n          return; // ここで処理を止めるの\r\n        }\r\n        showError(\"タスクの更新ができませんでした\");\r\n        console.error(err);\r\n    }\r\n  };\r\n  //カテゴリー更新\r\n    const handleUpdateCategory = async (catId, updatedFields) => {\r\n      try{\r\n          await addCategorySchema.validate({ title: updatedFields });\r\n          const updated = await updateCategoryAPI(catId, updatedFields)\r\n          setCategories(preCategories => preCategories.map(cat => cat._id === updated.data._id ? {...cat,...updated.data}:cat))\r\n          setEditingCategoryId(null);\r\n          setCategoryEdit(\"\")\r\n          showSuccess(\"カテゴリーを更新しました\")\r\n      }catch (err) {\r\n        if (err.name === \"ValidationError\") {\r\n          setErrorMessageCat(err.message); \r\n          return; \r\n        }\r\n        showError(\"カテゴリーの更新ができませんでした\");\r\n        console.error(err);\r\n      }\r\n    }\r\n\r\n  const deleteTask = async (id) => {\r\n    try {\r\n          await deleteTaskAPI(id);\r\n          console.log(\"DELETE_TASK\", id);\r\n          dispatch({ type: \"DELETE_TASK\", payload: { id } });\r\n    } catch (err) {\r\n      showError(\"タスクの削除ができませんでした\")\r\n      console.error(\"タスクの削除に失敗しました:\", err);\r\n    }\r\n  };\r\n\r\nconst filteredTasks = useMemo(() => {\r\n  return Array.isArray(tasks)\r\n    ? tasks.filter((task) => {\r\n        const taskCatId = task.category?._id ?? task.category;\r\n        return (\r\n          categoryFilter.length === 0 ||\r\n          categoryFilter.includes(String(taskCatId))\r\n        );\r\n      })\r\n    : [];\r\n}, [tasks, categoryFilter]);\r\n\r\n\r\nreturn (\r\n  <div>\r\n    {categories.map((cat) => {\r\n      const tasksInCategory = filteredTasks.filter((task) => {\r\n        const id = task.category?._id;\r\n        return String(id) === String(cat._id);\r\n      });\r\n\r\n      if (tasksInCategory.length === 0) return null;\r\n\r\n      return (\r\n        <div key={cat._id + \"input\"} className=\"mb-4\">\r\n          <div className=\"flex items-center justify-between px-2 mt-4\">\r\n            {editingCategoryId === cat._id  ? (\r\n              <>\r\n                <input\r\n                  type=\"text\"\r\n                  value={categoryEdit}\r\n                  onChange={(e) => setCategoryEdit(e.target.value)}\r\n                  onBlur={() => handleUpdateCategory(cat._id, categoryEdit)}\r\n                  onKeyDown={(e) => {\r\n                    if (e.key === \"Enter\") {\r\n                      e.preventDefault(); \r\n                      handleUpdateCategory(cat._id, categoryEdit);\r\n                    }     \r\n                  }}\r\n                  autoFocus\r\n                  className=\"flex-grow\"\r\n                />\r\n                {errorMessageCat && (\r\n                  <p className=\"text-red-500 text-xs italic ml-2\">{errorMessageCat}</p>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <h2 \r\n                    onDoubleClick={() => {\r\n                      if (cat.title !== \"未分類\"  && (!user || cat.user === user.id)) {\r\n                        startEditingCat(cat._id, cat.title);\r\n                      }\r\n                    }}\r\n                  className=\"font-bold text-lg\"\r\n                >\r\n                  {cat.title}\r\n                </h2>\r\n                {cat.title !== \"未分類\" &&  (!user || cat.user === user.id) &&(\r\n                  <button\r\n                    onClick={() => removeCategory(cat._id, cat.title)}\r\n                    className=\"text-red-500 text-sm\"\r\n                  >\r\n                    <FontAwesomeIcon icon={faTrash} />\r\n                  </button>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n\r\n          <ul>\r\n            {tasksInCategory.map((task) => (\r\n              <TaskItem\r\n                key={task._id}\r\n                task={task}\r\n                editingTaskId={editingTaskId}\r\n                editText={editText}\r\n                startEditing={startEditing}\r\n                toggleTask={toggleTask}\r\n                updatePriority={updatePriority}\r\n                updateDueDate={updateDueDate}\r\n                handleUpdateTask={handleUpdateTask}\r\n                deleteTask={deleteTask}\r\n                errorMessage={errorMessage}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      );\r\n    })}\r\n  </div>\r\n);}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}