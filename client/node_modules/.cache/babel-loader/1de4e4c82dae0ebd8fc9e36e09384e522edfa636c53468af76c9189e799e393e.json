{"ast":null,"code":"import axios from 'axios';\nconst apiClient = axios.create({\n  baseURL: 'http://localhost:3000/api',\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 5000\n});\napiClient.interceptors.request.use(function (config) {\n  if (csrfToken) {\n    config.headers['X-CSRF-Token'] = csrfToken;\n  }\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\nconst getCsrfToken = async () => {\n  try {\n    const res = await apiClient.get('/api/csrf-token', {\n      withCredentials: true\n    });\n    return res.data.csrfToken;\n  } catch (err) {\n    throw err;\n  }\n};\nconst csrfToken = await getCsrfToken();\napiClient.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  return Promise.reject(error);\n});\nexport default apiClient;","map":{"version":3,"names":["axios","apiClient","create","baseURL","withCredentials","headers","timeout","interceptors","request","use","config","csrfToken","error","Promise","reject","getCsrfToken","res","get","data","err","response"],"sources":["C:/Users/hinan/todo-app/client/src/services/apiClient.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n\r\nconst apiClient = axios.create({\r\n  baseURL: 'http://localhost:3000/api', \r\n  withCredentials: true, \r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  timeout: 5000, \r\n});\r\n\r\n\r\n\r\napiClient.interceptors.request.use(function (config) {\r\n    if (csrfToken) {\r\n      config.headers['X-CSRF-Token'] = csrfToken;\r\n    }\r\n    return config;\r\n  }, function (error) {\r\n    return Promise.reject(error);\r\n  });\r\n\r\n  const getCsrfToken = async () => {\r\n    try {\r\n        const res = await apiClient.get('/api/csrf-token', { withCredentials: true });\r\n        return res.data.csrfToken;\r\n    } catch (err) {\r\n        throw err;\r\n    }\r\n};\r\n\r\nconst csrfToken = await getCsrfToken();\r\n\r\n  apiClient.interceptors.response.use(function (response) {\r\n    return response;\r\n  }, function (error) {\r\n    return Promise.reject(error);\r\n  });\r\n\r\nexport default apiClient;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC7BC,OAAO,EAAE,2BAA2B;EACpCC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,OAAO,EAAE;AACX,CAAC,CAAC;AAIFL,SAAS,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,UAAUC,MAAM,EAAE;EACjD,IAAIC,SAAS,EAAE;IACbD,MAAM,CAACL,OAAO,CAAC,cAAc,CAAC,GAAGM,SAAS;EAC5C;EACA,OAAOD,MAAM;AACf,CAAC,EAAE,UAAUE,KAAK,EAAE;EAClB,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;AAEF,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;EAC/B,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMf,SAAS,CAACgB,GAAG,CAAC,iBAAiB,EAAE;MAAEb,eAAe,EAAE;IAAK,CAAC,CAAC;IAC7E,OAAOY,GAAG,CAACE,IAAI,CAACP,SAAS;EAC7B,CAAC,CAAC,OAAOQ,GAAG,EAAE;IACV,MAAMA,GAAG;EACb;AACJ,CAAC;AAED,MAAMR,SAAS,GAAG,MAAMI,YAAY,CAAC,CAAC;AAEpCd,SAAS,CAACM,YAAY,CAACa,QAAQ,CAACX,GAAG,CAAC,UAAUW,QAAQ,EAAE;EACtD,OAAOA,QAAQ;AACjB,CAAC,EAAE,UAAUR,KAAK,EAAE;EAClB,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;AAEJ,eAAeX,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}