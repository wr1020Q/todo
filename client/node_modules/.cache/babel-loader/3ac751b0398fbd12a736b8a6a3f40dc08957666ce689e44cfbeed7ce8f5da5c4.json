{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hinan\\\\todo-app\\\\client\\\\src\\\\context\\\\TaskContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer, useEffect, useRef } from \"react\";\nimport CryptoJS from \"crypto-js\";\nimport DOMPurify from \"dompurify\";\n// console.log(\"CONTEXT\",SECRET_KEY);\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SECRET_KEY = process.env.REACT_APP_SECRET_KEY;\nexport const TaskContext = /*#__PURE__*/createContext();\nconst initialState = {\n  tasks: [],\n  editText: \"\",\n  dueDate: \"\",\n  isLoading: true,\n  categoryFilter: [],\n  sortBy: \"deadlineAsc\"\n};\nconst taskReducer = (state, action) => {\n  switch (action.type) {\n    case \"INIT_TASKS\":\n      return {\n        ...state,\n        tasks: action.payload,\n        isLoading: false\n      };\n    case \"ADD_TASK\":\n      return {\n        ...state,\n        tasks: [...state.tasks, action.payload]\n      };\n    case \"DELETE_TASK\":\n      return {\n        ...state,\n        tasks: state.tasks.filter(task => task.id !== action.payload.id)\n      };\n    case \"START_EDITING\":\n      return {\n        ...state,\n        tasks: state.tasks.map(task => task.id === action.payload.id ? {\n          ...task,\n          isEditing: true\n        } : task),\n        editText: action.payload.text\n      };\n    case \"SAVE_EDIT\":\n      const sanitized = DOMPurify.sanitize(state.editText);\n      return {\n        ...state,\n        tasks: state.tasks.map(task => task.id === action.payload.id ? {\n          ...task,\n          text: sanitized,\n          isEditing: false\n        } : task),\n        editText: \"\"\n      };\n    case \"TOGGLE_TASK\":\n      return {\n        ...state,\n        tasks: state.tasks.map(task => task.id === action.payload.id ? {\n          ...task,\n          completed: !task.completed\n        } : task),\n        editText: \"\"\n      };\n    case \"UPDATE_PRIORITY\":\n      return {\n        ...state,\n        tasks: state.tasks.map(task => task.id === action.payload.id ? {\n          ...task,\n          priority: action.payload.newPriority\n        } : task)\n      };\n    case \"SET_DUE_DATE\":\n      return {\n        ...state,\n        dueDate: action.payload\n      };\n    case \"UPDATE_DUE_DATE\":\n      return {\n        ...state,\n        tasks: state.tasks.map(task => task.id === action.payload.id ? {\n          ...task,\n          dueDate: action.payload.dueDate\n        } : task)\n      };\n    case \"TOGGLE_COMPLETE\":\n      const {\n        payload: category\n      } = action;\n      const isSelected = state.categoryFilter.includes(category);\n      return {\n        ...state,\n        categoryFilter: isSelected ? state.categoryFilter.filter(c => c !== category) // 解除\n        : [...state.categoryFilter, category] // 追加\n      };\n    case 'SET_CATEGORY_FILTER':\n      console.log('新しいカテゴリフィルター:', action.payload);\n      return {\n        ...state,\n        categoryFilter: action.payload\n      };\n    case \"SET_SORT\":\n      return {\n        ...state,\n        sortBy: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const TaskProvider = ({\n  children\n}) => {\n  _s();\n  const isFirstRender = useRef(true);\n  const [state, dispatch] = useReducer(taskReducer, initialState);\n\n  // useEffect(() => {\n  //   console.log(\"ローカルストラテジー読み込んだよ\")\n  //   try {\n  //     const encryptedData = localStorage.getItem(\"tasks\");\n  //     console.log(\"encryptedData:\", encryptedData);\n  //     if (!encryptedData) return;\n\n  //     const bytes = CryptoJS.AES.decrypt(encryptedData, SECRET_KEY);\n  //     const decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n  //     console.log(\"復号した文字列:\", decryptedData);\n\n  //     if (Array.isArray(decryptedData)) {\n  //       dispatch({ type: \"INIT_TASKS\", payload: decryptedData });\n  //     }\n  //   } catch (error) {\n  //     console.error(\"ローカルストレージ読み込みエラー:\", error);\n  //     dispatch({ type: \"INIT_TASKS\", payload: [] });\n  //   }\n  // }, []);\n\n  useEffect(() => {\n    console.log(\"現在の state.tasks:\", state.tasks);\n    console.log(\"ローカルストラテジー読み込んだよ\");\n    try {\n      const encryptedData = localStorage.getItem(\"tasks\");\n      console.log(\"encryptedData:\", encryptedData);\n      if (!encryptedData) return;\n      const bytes = CryptoJS.AES.decrypt(encryptedData, SECRET_KEY);\n      const decryptedString = bytes.toString(CryptoJS.enc.Utf8);\n      localStorage.setItem(\"test\", \"hello\");\n      if (!decryptedString) {\n        console.warn(\"復号した文字列が空です！\");\n        return;\n      }\n      const parsedTasks = JSON.parse(decryptedString);\n      console.log(\"復号＆パース成功:\", parsedTasks);\n      console.log(\"保存されたか確認:\", localStorage.getItem(\"tasks\"));\n      if (Array.isArray(parsedTasks)) {\n        dispatch({\n          type: \"INIT_TASKS\",\n          payload: parsedTasks\n        });\n      } else {\n        console.warn(\"復号したデータが配列じゃない:\", parsedTasks);\n      }\n    } catch (error) {\n      console.error(\"ローカルストレージ読み込みエラー:\", error);\n      dispatch({\n        type: \"INIT_TASKS\",\n        payload: []\n      });\n    }\n  }, []);\n  useEffect(() => {\n    console.log(\"タスク保存処理走った！\");\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    try {\n      const encrypted = CryptoJS.AES.encrypt(JSON.stringify(state.tasks), SECRET_KEY).toString();\n      localStorage.setItem(\"tasks\", encrypted);\n      console.log(\"保存直前の tasks:\", encrypted);\n    } catch (error) {\n      console.error(\"ローカルストレージ保存エラー:\", error);\n    }\n  }, [state.tasks]);\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskProvider, \"wAlWU5rNQq06VyECwTNoA/0sx0E=\");\n_c = TaskProvider;\nvar _c;\n$RefreshReg$(_c, \"TaskProvider\");","map":{"version":3,"names":["createContext","useReducer","useEffect","useRef","CryptoJS","DOMPurify","jsxDEV","_jsxDEV","SECRET_KEY","process","env","REACT_APP_SECRET_KEY","TaskContext","initialState","tasks","editText","dueDate","isLoading","categoryFilter","sortBy","taskReducer","state","action","type","payload","filter","task","id","map","isEditing","text","sanitized","sanitize","completed","priority","newPriority","category","isSelected","includes","c","console","log","TaskProvider","children","_s","isFirstRender","dispatch","encryptedData","localStorage","getItem","bytes","AES","decrypt","decryptedString","toString","enc","Utf8","setItem","warn","parsedTasks","JSON","parse","Array","isArray","error","current","encrypted","encrypt","stringify","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hinan/todo-app/client/src/context/TaskContext.jsx"],"sourcesContent":["import { createContext, useReducer, useEffect, useRef } from \"react\";\r\nimport CryptoJS from \"crypto-js\";\r\nimport DOMPurify from \"dompurify\";\r\n// console.log(\"CONTEXT\",SECRET_KEY);\r\nconst SECRET_KEY = process.env.REACT_APP_SECRET_KEY;\r\nexport const TaskContext = createContext();\r\n\r\nconst initialState = {\r\n  tasks: [],\r\n  editText: \"\",\r\n  dueDate: \"\",\r\n  isLoading: true,\r\n  categoryFilter: [],\r\n  sortBy: \"deadlineAsc\", \r\n};\r\n\r\nconst taskReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case \"INIT_TASKS\":\r\n            return {\r\n                ...state,\r\n                tasks: action.payload,\r\n                isLoading: false\r\n            };\r\n        case \"ADD_TASK\":\r\n            return {\r\n              ...state,\r\n              tasks: [...state.tasks,action.payload],\r\n            };\r\n        case \"DELETE_TASK\":\r\n          return{\r\n              ...state,\r\n              tasks: state.tasks.filter(task => task.id !== action.payload.id)\r\n          };\r\n        case \"START_EDITING\":\r\n            return {\r\n              ...state,\r\n              tasks: state.tasks.map(task =>\r\n                task.id === action.payload.id\r\n                  ? { ...task, isEditing: true }\r\n                  : task\r\n              ),\r\n              editText: action.payload.text,\r\n            };\r\n        case \"SAVE_EDIT\":\r\n            const sanitized = DOMPurify.sanitize(state.editText);\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map(task =>\r\n                task.id === action.payload.id\r\n                    ? { ...task, text: sanitized, isEditing: false }\r\n                    : task\r\n                ),\r\n                  editText:\"\"\r\n            };\r\n        case \"TOGGLE_TASK\":\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map(task =>\r\n                    task.id === action.payload.id\r\n                    ? { ...task, completed: !task.completed }\r\n                    : task\r\n                ),\r\n                    editText:\"\"\r\n            };\r\n        case \"UPDATE_PRIORITY\":\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map(task =>\r\n                task.id === action.payload.id\r\n                    ? { ...task, priority: action.payload.newPriority }\r\n                    : task\r\n                ),\r\n            };\r\n        case \"SET_DUE_DATE\":\r\n              return {\r\n                  ...state,\r\n                  dueDate: action.payload,\r\n              };\r\n        case \"UPDATE_DUE_DATE\":\r\n              return {\r\n                  ...state,\r\n                  tasks: state.tasks.map(task =>\r\n                    task.id === action.payload.id\r\n                      ? { ...task, dueDate: action.payload.dueDate }\r\n                      : task\r\n                  )\r\n                };\r\n        case \"TOGGLE_COMPLETE\":\r\n              const { payload: category } = action;\r\n              const isSelected = state.categoryFilter.includes(category);\r\n              return {\r\n                ...state,\r\n                categoryFilter: isSelected\r\n                ? state.categoryFilter.filter(c => c !== category) // 解除\r\n                : [...state.categoryFilter, category],             // 追加\r\n          };\r\n        case 'SET_CATEGORY_FILTER':\r\n          console.log('新しいカテゴリフィルター:', action.payload); \r\n            return {\r\n                ...state,\r\n                categoryFilter: action.payload,\r\n            };\r\n        case \"SET_SORT\":\r\n            return {\r\n                ...state,\r\n                sortBy: action.payload,\r\n            };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export const TaskProvider = ({ children }) => {\r\n    const isFirstRender = useRef(true);\r\n    const [state, dispatch] = useReducer(taskReducer, initialState);\r\n    \r\n    // useEffect(() => {\r\n    //   console.log(\"ローカルストラテジー読み込んだよ\")\r\n    //   try {\r\n    //     const encryptedData = localStorage.getItem(\"tasks\");\r\n    //     console.log(\"encryptedData:\", encryptedData);\r\n    //     if (!encryptedData) return;\r\n      \r\n    //     const bytes = CryptoJS.AES.decrypt(encryptedData, SECRET_KEY);\r\n    //     const decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\n    //     console.log(\"復号した文字列:\", decryptedData);\r\n\r\n    //     if (Array.isArray(decryptedData)) {\r\n    //       dispatch({ type: \"INIT_TASKS\", payload: decryptedData });\r\n    //     }\r\n    //   } catch (error) {\r\n    //     console.error(\"ローカルストレージ読み込みエラー:\", error);\r\n    //     dispatch({ type: \"INIT_TASKS\", payload: [] });\r\n    //   }\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n      console.log(\"現在の state.tasks:\", state.tasks); \r\n      console.log(\"ローカルストラテジー読み込んだよ\");\r\n      try {\r\n        const encryptedData = localStorage.getItem(\"tasks\");\r\n        console.log(\"encryptedData:\", encryptedData);\r\n       \r\n        if (!encryptedData) return;\r\n    \r\n        const bytes = CryptoJS.AES.decrypt(encryptedData, SECRET_KEY);\r\n        const decryptedString = bytes.toString(CryptoJS.enc.Utf8);\r\n        localStorage.setItem(\"test\", \"hello\") \r\n    \r\n        if (!decryptedString) {\r\n          console.warn(\"復号した文字列が空です！\");\r\n          return;\r\n        }\r\n    \r\n        const parsedTasks = JSON.parse(decryptedString);\r\n        console.log(\"復号＆パース成功:\", parsedTasks);\r\n        console.log(\"保存されたか確認:\", localStorage.getItem(\"tasks\"));\r\n        if (Array.isArray(parsedTasks)) {\r\n          dispatch({ type: \"INIT_TASKS\", payload: parsedTasks });\r\n        } else {\r\n          console.warn(\"復号したデータが配列じゃない:\", parsedTasks);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"ローカルストレージ読み込みエラー:\", error);\r\n        dispatch({ type: \"INIT_TASKS\", payload: [] });\r\n      }\r\n    }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"タスク保存処理走った！\"); \r\n    if (isFirstRender.current) {\r\n      isFirstRender.current = false;\r\n      return;\r\n    }\r\n    try {\r\n      const encrypted = CryptoJS.AES.encrypt(JSON.stringify(state.tasks), SECRET_KEY).toString();\r\n      localStorage.setItem(\"tasks\", encrypted);\r\n      console.log(\"保存直前の tasks:\", encrypted);\r\n    } catch (error) {\r\n      console.error(\"ローカルストレージ保存エラー:\", error);\r\n    }\r\n  }, [state.tasks]);\r\n  \r\nreturn (\r\n    <TaskContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </TaskContext.Provider>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}