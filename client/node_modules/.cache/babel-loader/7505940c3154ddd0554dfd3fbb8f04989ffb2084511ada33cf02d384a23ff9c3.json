{"ast":null,"code":"import { createRequestId } from \"@mswjs/interceptors\";\nimport { executeHandlers } from './utils/executeHandlers.mjs';\nconst getResponse = async (handlers, request) => {\n  const result = await executeHandlers({\n    request,\n    requestId: createRequestId(),\n    handlers\n  });\n  return result?.response;\n};\nexport { getResponse };","map":{"version":3,"names":["createRequestId","executeHandlers","getResponse","handlers","request","result","requestId","response"],"sources":["C:\\Users\\hinan\\todo-app\\client\\node_modules\\msw\\src\\core\\getResponse.ts"],"sourcesContent":["import { createRequestId } from '@mswjs/interceptors'\nimport type { RequestHandler } from './handlers/RequestHandler'\nimport { executeHandlers } from './utils/executeHandlers'\n\n/**\n * Finds a response for the given request instance\n * in the array of request handlers.\n * @param handlers The array of request handlers.\n * @param request The `Request` instance.\n * @returns {Response} A mocked response, if any.\n */\nexport const getResponse = async (\n  handlers: Array<RequestHandler>,\n  request: Request,\n): Promise<Response | undefined> => {\n  const result = await executeHandlers({\n    request,\n    requestId: createRequestId(),\n    handlers,\n  })\n\n  return result?.response\n}\n"],"mappings":"AAAA,SAASA,eAAA,QAAuB;AAEhC,SAASC,eAAA,QAAuB;AASzB,MAAMC,WAAA,GAAc,MAAAA,CACzBC,QAAA,EACAC,OAAA,KACkC;EAClC,MAAMC,MAAA,GAAS,MAAMJ,eAAA,CAAgB;IACnCG,OAAA;IACAE,SAAA,EAAWN,eAAA,CAAgB;IAC3BG;EACF,CAAC;EAED,OAAOE,MAAA,EAAQE,QAAA;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}