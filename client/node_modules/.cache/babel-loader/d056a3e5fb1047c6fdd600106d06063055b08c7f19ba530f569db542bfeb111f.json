{"ast":null,"code":"import{useState}from'react';import{getTasks,addCategoryAPI,getCategories}from'../services/TaskService';export const useCategories=()=>{const[categories,setCategories]=useState([]// async() => {\n// const saved = localStorage.getItem(\"categories\");\n// const catRes = await getCategories();\n// return catRes\n// }\n);const[selectedCategory,setSelectedCategory]=useState(categories[0]||\"\");const[newCategory,setNewCategory]=useState(\"\");const addCategory=async()=>{if(newCategory&&!categories.includes(newCategory)){const res=await addCategoryAPI(newCategory);setCategories([...categories,res]);setNewCategory(\"\");}};return{categories,setCategories,selectedCategory,setSelectedCategory,newCategory,setNewCategory,addCategory};};","map":{"version":3,"names":["useState","getTasks","addCategoryAPI","getCategories","useCategories","categories","setCategories","selectedCategory","setSelectedCategory","newCategory","setNewCategory","addCategory","includes","res"],"sources":["C:/Users/hinan/todo-app/client/src/hooks/useCategories.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { getTasks, addCategoryAPI, getCategories} from '../services/TaskService';\r\n\r\n\r\n\r\nexport const useCategories = () => {\r\n    const [categories, setCategories] = useState([]\r\n      // async() => {\r\n    // const saved = localStorage.getItem(\"categories\");\r\n    // const catRes = await getCategories();\r\n    // return catRes\r\n  // }\r\n);\r\n    const [selectedCategory, setSelectedCategory] = useState(categories[0] || \"\");\r\n    const [newCategory, setNewCategory] = useState(\"\");\r\n\r\n    const addCategory = async() => {\r\n        if (newCategory && !categories.includes(newCategory)) {\r\n          const res = await addCategoryAPI(newCategory);\r\n          setCategories([...categories, res]);\r\n          setNewCategory(\"\"); \r\n        }\r\n      };\r\n    \r\n      return{\r\n        categories,\r\n        setCategories,\r\n        selectedCategory,\r\n        setSelectedCategory,\r\n        newCategory,\r\n        setNewCategory,\r\n        addCategory,\r\n      }\r\n}"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,OAASC,QAAQ,CAAEC,cAAc,CAAEC,aAAa,KAAO,yBAAyB,CAIhF,MAAO,MAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGN,QAAQ,CAAC,EAC3C;AACF;AACA;AACA;AACF;AACF,CAAC,CACG,KAAM,CAACO,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGR,QAAQ,CAACK,UAAU,CAAC,CAAC,CAAC,EAAI,EAAE,CAAC,CAC7E,KAAM,CAACI,WAAW,CAAEC,cAAc,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAElD,KAAM,CAAAW,WAAW,CAAG,KAAAA,CAAA,GAAW,CAC3B,GAAIF,WAAW,EAAI,CAACJ,UAAU,CAACO,QAAQ,CAACH,WAAW,CAAC,CAAE,CACpD,KAAM,CAAAI,GAAG,CAAG,KAAM,CAAAX,cAAc,CAACO,WAAW,CAAC,CAC7CH,aAAa,CAAC,CAAC,GAAGD,UAAU,CAAEQ,GAAG,CAAC,CAAC,CACnCH,cAAc,CAAC,EAAE,CAAC,CACpB,CACF,CAAC,CAED,MAAM,CACJL,UAAU,CACVC,aAAa,CACbC,gBAAgB,CAChBC,mBAAmB,CACnBC,WAAW,CACXC,cAAc,CACdC,WACF,CAAC,CACP,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}