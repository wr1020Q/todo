{"ast":null,"code":"import React,{useState}from'react';import Calendar from'react-calendar';import'react-calendar/dist/Calendar.css';import{useContext}from\"react\";import{TaskContext}from\"./context/TaskContext\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CalendarTodo=()=>{const[selectedDate,setSelectedDate]=useState(new Date());const{state}=useContext(TaskContext);const{tasks}=state;console.log(\"CalendarTodo\");const filteredtasks=tasks.filter(task=>new Date(task.dueDate).toDateString()===selectedDate.toDateString());console.log(\"カレンダーfilteredtasks:\",filteredtasks);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Calendar,{onChange:setSelectedDate,value:selectedDate}),/*#__PURE__*/_jsxs(\"h3\",{children:[selectedDate.toDateString(),\" \\u306ETask\"]}),/*#__PURE__*/_jsx(\"ul\",{children:filteredtasks.map(task=>/*#__PURE__*/_jsx(\"li\",{children:task.text},task.id))})]});};export default CalendarTodo;","map":{"version":3,"names":["React","useState","Calendar","useContext","TaskContext","jsx","_jsx","jsxs","_jsxs","CalendarTodo","selectedDate","setSelectedDate","Date","state","tasks","console","log","filteredtasks","filter","task","dueDate","toDateString","children","onChange","value","map","text","id"],"sources":["C:/Users/hinan/todo-app/src/client/src/Calender.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport { useContext } from \"react\"\r\nimport { TaskContext } from \"./context/TaskContext\";\r\n\r\n\r\nconst CalendarTodo = () => {\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const { state} = useContext(TaskContext);\r\n  const { tasks } = state;\r\n\r\n  console.log(\"CalendarTodo\")\r\n  const filteredtasks = tasks.filter(task =>\r\n    new Date(task.dueDate).toDateString() === selectedDate.toDateString()\r\n    \r\n  );\r\n\r\n  console.log(\"カレンダーfilteredtasks:\",filteredtasks)\r\n\r\n  return (\r\n    <div>\r\n      <Calendar\r\n        onChange={setSelectedDate}\r\n        value={selectedDate}\r\n      />\r\n\r\n      <h3>{selectedDate.toDateString()} のTask</h3>\r\n      <ul>\r\n        {filteredtasks.map(task => (\r\n          <li key={task.id}>{task.text}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarTodo;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,QAAQ,KAAM,gBAAgB,CACrC,MAAO,kCAAkC,CACzC,OAASC,UAAU,KAAQ,OAAO,CAClC,OAASC,WAAW,KAAQ,uBAAuB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAGpD,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGV,QAAQ,CAAC,GAAI,CAAAW,IAAI,CAAC,CAAC,CAAC,CAC5D,KAAM,CAAEC,KAAK,CAAC,CAAGV,UAAU,CAACC,WAAW,CAAC,CACxC,KAAM,CAAEU,KAAM,CAAC,CAAGD,KAAK,CAEvBE,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,CAC3B,KAAM,CAAAC,aAAa,CAAGH,KAAK,CAACI,MAAM,CAACC,IAAI,EACrC,GAAI,CAAAP,IAAI,CAACO,IAAI,CAACC,OAAO,CAAC,CAACC,YAAY,CAAC,CAAC,GAAKX,YAAY,CAACW,YAAY,CAAC,CAEtE,CAAC,CAEDN,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAACC,aAAa,CAAC,CAEhD,mBACET,KAAA,QAAAc,QAAA,eACEhB,IAAA,CAACJ,QAAQ,EACPqB,QAAQ,CAAEZ,eAAgB,CAC1Ba,KAAK,CAAEd,YAAa,CACrB,CAAC,cAEFF,KAAA,OAAAc,QAAA,EAAKZ,YAAY,CAACW,YAAY,CAAC,CAAC,CAAC,aAAM,EAAI,CAAC,cAC5Cf,IAAA,OAAAgB,QAAA,CACGL,aAAa,CAACQ,GAAG,CAACN,IAAI,eACrBb,IAAA,OAAAgB,QAAA,CAAmBH,IAAI,CAACO,IAAI,EAAnBP,IAAI,CAACQ,EAAmB,CAClC,CAAC,CACA,CAAC,EACF,CAAC,CAEV,CAAC,CAED,cAAe,CAAAlB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}