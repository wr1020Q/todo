{"ast":null,"code":"import{useState,useEffect,useRef}from\"react\";import TaskInput from\"./component/TaskInput\";import{TaskContext}from\"./context/TaskContext\";import{useCategories}from\"./hooks/useCategories\";import CategoryInput from\"./component/CategoryInput\";import{useContext}from\"react\";import TaskListWrapper from\"./component/TaskListWrapper\";// const SECRET_KEY = process.env.REACT_APP_SECRET_KEY;\nimport'react-calendar/dist/Calendar.css';import CalendarTodo from\"./page/Calender\";import{useTasks}from\"./hooks/useGetTasks\";import{useGetCategories}from\"./hooks/useGetCategories\";import{getTasks,addTask,updateTask,deleteTask,getCategorie,getCategories,deleteCategory}from'./services/TaskService';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function TodoApp(){const{state,dispatch}=useContext(TaskContext);const[tasks,setTasks]=useState([]);// const { tasks, editText ,dueDate ,isLoading,categoryFilter} = state;\nconst{editText,dueDate,isLoading,categoryFilter}=state;// const isFirstRender = useRef(true);\nconst[task,setTask]=useState(\"\");const[priority,setPriority]=useState(2);const[selectedDate,setSelectedDate]=useState(new Date());const{fetchTasks}=useTasks();const{fetchCategories}=useGetCategories();useEffect(()=>{fetchTasks();fetchCategories();},[]);// const {\n//   categories,\n//   setCategories,\n//   selectedCategory,\n//   setSelectedCategory,\n//   newCategory,\n//   setNewCategory,\n//   addCategory\n// } = useCategories(tasks, (updatedTasks) =>\n//   dispatch({ type: \"INIT_TASKS\", payload: updatedTasks })\n// );\nconst{categories,setCategories,selectedCategory,setSelectedCategory,newCategory,setNewCategory,addCategory}=TaskContext();const validateTask=_ref=>{let{text,priority,category,dueDate}=_ref;if(!text.trim()){alert(\"タスク名は必須です。\");return false;}if(text.length>100){alert(\"タスク名は100文字以内にしてください。\");return false;}if(![1,2,3].includes(priority)){alert(\"優先度が不正です。\");return false;}if(!category||category.trim()===\"\"){alert(\"カテゴリを選択してください。\");return false;}if(dueDate){const selected=new Date(dueDate);const today=new Date();today.setHours(0,0,0,0);// 今日の0:00\nif(selected<today){alert(\"期限は未来の日付を選んでください。\");return false;}}return true;};const handleAddTask=async()=>{// console.log(\"handleAddTask:priority\",priority)\n// const value = Number(priority);\n// console.log(\"選択された優先度:\", value);\nconst newTask={text:task,priority,category:selectedCategory||\"未分類\",//名前だよね\ndueDate};if(!validateTask(newTask))return;const createdTask=await addTask(newTask);dispatch({type:\"ADD_TASK\",payload:createdTask});setTask(\"\");setPriority(2);setSelectedCategory(categories[0]||\"\");dispatch({type:\"SET_DUE_DATE\",payload:\"\"});};const removeCategory=async(id,title)=>{if(title===\"未分類\")return;try{await deleteCategory(id);const res=await getTasks();const catRes=await getCategories();setCategories(catRes.data);dispatch({type:\"INIT_TASKS\",payload:res});}catch(err){console.error(\"カテゴリ削除エラー\",err);}};const handleCategoryFilterChange=category=>{const updatedFilter=categoryFilter.includes(category)?categoryFilter.filter(cat=>cat!==category):[...categoryFilter,category];console.log(\"新しいカテゴリフィルター,handleCategoryFilterChange:\",updatedFilter);dispatch({type:\"SET_CATEGORY_FILTER\",payload:updatedFilter});};const tasksForSelectedDate=tasks.filter(task=>task.dueDate&&new Date(task.dueDate).toDateString()===selectedDate.toDateString());useEffect(()=>{console.log(\"タスク更新:\",tasks);},[tasks]);return/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 max-w-md mx-auto bg-white shadow rounded-lg\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-xl font-bold mb-4\",children:\"ToDo \\u30A2\\u30D7\\u30EA\"}),isLoading?/*#__PURE__*/_jsx(\"p\",{children:\"\\u8AAD\\u307F\\u8FBC\\u307F\\u4E2D...\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"my-4\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-semibold mb-2\",children:\"\\uD83D\\uDCC5 \\u30AB\\u30EC\\u30F3\\u30C0\\u30FC\\u304B\\u3089\\u65E5\\u4ED8\\u3092\\u9078\\u629E\"}),/*#__PURE__*/_jsx(CalendarTodo,{})]}),/*#__PURE__*/_jsx(TaskInput,{task:task,setTask:setTask,priority:priority,handlePriorityChange:e=>setPriority(Number(e.target.value)),setPriority:setPriority,selectedCategory:selectedCategory,setSelectedCategory:setSelectedCategory,categories:categories,handleAddTask:handleAddTask,dueDate:dueDate,setDueDate:date=>dispatch({type:\"SET_DUE_DATE\",payload:date}),handleCheckboxChange:handleCategoryFilterChange,categoryFilter:categoryFilter}),/*#__PURE__*/_jsx(TaskListWrapper,{tasks:tasksForSelectedDate,categories:categories,editText:editText,dueDate:dueDate,removeCategory:removeCategory}),/*#__PURE__*/_jsx(CategoryInput,{newCategory:newCategory,setNewCategory:setNewCategory,addCategory:addCategory})]})]});}","map":{"version":3,"names":["useState","useEffect","useRef","TaskInput","TaskContext","useCategories","CategoryInput","useContext","TaskListWrapper","CalendarTodo","useTasks","useGetCategories","getTasks","addTask","updateTask","deleteTask","getCategorie","getCategories","deleteCategory","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TodoApp","state","dispatch","tasks","setTasks","editText","dueDate","isLoading","categoryFilter","task","setTask","priority","setPriority","selectedDate","setSelectedDate","Date","fetchTasks","fetchCategories","categories","setCategories","selectedCategory","setSelectedCategory","newCategory","setNewCategory","addCategory","validateTask","_ref","text","category","trim","alert","length","includes","selected","today","setHours","handleAddTask","newTask","createdTask","type","payload","removeCategory","id","title","res","catRes","data","err","console","error","handleCategoryFilterChange","updatedFilter","filter","cat","log","tasksForSelectedDate","toDateString","className","children","handlePriorityChange","e","Number","target","value","setDueDate","date","handleCheckboxChange"],"sources":["C:/Users/hinan/todo-app/client/src/TodoApp.js"],"sourcesContent":["\r\nimport { useState, useEffect,useRef } from \"react\";\r\nimport TaskInput from \"./component/TaskInput\";\r\nimport { TaskContext } from \"./context/TaskContext\";\r\nimport { useCategories } from \"./hooks/useCategories\"; \r\nimport CategoryInput from \"./component/CategoryInput\";\r\nimport { useContext } from \"react\"; \r\nimport TaskListWrapper from \"./component/TaskListWrapper\";\r\n// const SECRET_KEY = process.env.REACT_APP_SECRET_KEY;\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport CalendarTodo from \"./page/Calender\";\r\nimport { useTasks } from \"./hooks/useGetTasks\";\r\nimport { useGetCategories } from \"./hooks/useGetCategories\"; \r\nimport { getTasks, addTask, updateTask, deleteTask ,getCategorie, getCategories,deleteCategory} from './services/TaskService';\r\n\r\n\r\nexport default function TodoApp() {\r\n  const { state, dispatch } = useContext(TaskContext);\r\n  const [tasks, setTasks] = useState([]);\r\n  // const { tasks, editText ,dueDate ,isLoading,categoryFilter} = state;\r\n  const {  editText ,dueDate ,isLoading,categoryFilter} = state;\r\n  // const isFirstRender = useRef(true);\r\n  const [task, setTask] = useState(\"\");\r\n  const [priority, setPriority] = useState(2);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const { fetchTasks } = useTasks();\r\n  const { fetchCategories } = useGetCategories();\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n    fetchCategories()\r\n  }, []);\r\n\r\n  // const {\r\n  //   categories,\r\n  //   setCategories,\r\n  //   selectedCategory,\r\n  //   setSelectedCategory,\r\n  //   newCategory,\r\n  //   setNewCategory,\r\n  //   addCategory\r\n  // } = useCategories(tasks, (updatedTasks) =>\r\n  //   dispatch({ type: \"INIT_TASKS\", payload: updatedTasks })\r\n  // );\r\n\r\n    const {\r\n    categories,\r\n    setCategories,\r\n    selectedCategory,\r\n    setSelectedCategory,\r\n    newCategory,\r\n    setNewCategory,\r\n    addCategory,\r\n  } = TaskContext();\r\n\r\n  const validateTask = ({ text, priority, category, dueDate }) => {\r\n    if (!text.trim()) {\r\n      alert(\"タスク名は必須です。\");\r\n      return false;\r\n    }\r\n\r\n    if (text.length > 100) {\r\n      alert(\"タスク名は100文字以内にしてください。\");\r\n      return false;\r\n    }\r\n\r\n    if (![1, 2, 3].includes(priority)) {\r\n      alert(\"優先度が不正です。\");\r\n      return false;\r\n    }\r\n\r\n    if (!category || category.trim() === \"\") {\r\n      alert(\"カテゴリを選択してください。\");\r\n      return false;\r\n    }\r\n\r\n    if (dueDate) {\r\n      const selected = new Date(dueDate);\r\n      const today = new Date();\r\n      today.setHours(0, 0, 0, 0); // 今日の0:00\r\n      if (selected < today) {\r\n        alert(\"期限は未来の日付を選んでください。\");\r\n        return false;\r\n      }\r\n    }\r\n\r\n  return true;\r\n};\r\n\r\n  \r\n  const handleAddTask = async () => {\r\n    // console.log(\"handleAddTask:priority\",priority)\r\n    // const value = Number(priority);\r\n    // console.log(\"選択された優先度:\", value);\r\n    const newTask = {\r\n    text: task,\r\n    priority,\r\n    category: selectedCategory || \"未分類\",//名前だよね\r\n    dueDate\r\n  };\r\n\r\n    if (!validateTask(newTask)) return;\r\n    const createdTask= await addTask(newTask);\r\n\r\n    dispatch({\r\n      type: \"ADD_TASK\",\r\n      payload:  createdTask ,\r\n    });\r\n    setTask(\"\");\r\n    setPriority(2);\r\n    setSelectedCategory(categories[0] || \"\");\r\n    dispatch({ type: \"SET_DUE_DATE\", payload: \"\" });\r\n  };\r\n\r\n  const removeCategory = async(id, title) => {\r\n    if (title === \"未分類\") return;\r\n  \r\n  try {\r\n    await deleteCategory(id); \r\n    const res = await getTasks(); \r\n    const catRes = await getCategories();\r\n\r\n    setCategories(catRes.data);\r\n    dispatch({ type: \"INIT_TASKS\", payload: res });\r\n  } catch (err) {\r\n    console.error(\"カテゴリ削除エラー\", err);\r\n  }\r\n  };\r\n\r\n  const handleCategoryFilterChange = (category) => {\r\n    const updatedFilter = categoryFilter.includes(category)\r\n      ? categoryFilter.filter((cat) => cat !== category) \r\n      : [...categoryFilter, category]; \r\n      console.log(\"新しいカテゴリフィルター,handleCategoryFilterChange:\", updatedFilter);\r\n    dispatch({ type: \"SET_CATEGORY_FILTER\", payload: updatedFilter });\r\n  };\r\n\r\n  const tasksForSelectedDate = tasks.filter(\r\n    (task) =>\r\n      task.dueDate &&\r\n      new Date(task.dueDate).toDateString() === selectedDate.toDateString()\r\n  );\r\n\r\n  useEffect(() => {\r\n    console.log(\"タスク更新:\", tasks);\r\n  }, [tasks]);\r\n  \r\n  return (\r\n\r\n    <div className=\"p-4 max-w-md mx-auto bg-white shadow rounded-lg\">\r\n      <h1 className=\"text-xl font-bold mb-4\">ToDo アプリ</h1>\r\n\r\n      {isLoading ? (\r\n      <p>読み込み中...</p>\r\n    ) : (\r\n      <>\r\n      <div className=\"my-4\">\r\n        <h2 className=\"text-lg font-semibold mb-2\">📅 カレンダーから日付を選択</h2>\r\n        <CalendarTodo />\r\n      </div>\r\n\r\n      <TaskInput\r\n        task={task}\r\n        setTask={setTask}\r\n        priority={priority}\r\n        handlePriorityChange={(e) => setPriority(Number(e.target.value))} \r\n        setPriority={setPriority}\r\n        selectedCategory={selectedCategory}\r\n        setSelectedCategory={setSelectedCategory}\r\n        categories={categories}\r\n        handleAddTask={handleAddTask}\r\n        dueDate = {dueDate}\r\n        setDueDate={(date) => dispatch({ type: \"SET_DUE_DATE\", payload: date })}\r\n        handleCheckboxChange={handleCategoryFilterChange}\r\n        categoryFilter={categoryFilter}\r\n      />\r\n\r\n      <TaskListWrapper\r\n        tasks={tasksForSelectedDate}\r\n        categories={categories}\r\n        editText={editText}\r\n        dueDate={dueDate}\r\n        removeCategory={removeCategory}\r\n      />\r\n\r\n      <CategoryInput\r\n        newCategory = {newCategory}\r\n        setNewCategory = {setNewCategory}\r\n        addCategory = {addCategory}\r\n      />\r\n      </>\r\n      )}\r\n  </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}