{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hinan\\\\todo-app\\\\client\\\\src\\\\context\\\\ErrorContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ErrorContext = /*#__PURE__*/createContext();\nexport const ErrorProvider = ({\n  children\n}) => {\n  _s();\n  console.log('ErrorContext module loaded');\n  const [error, setError] = useState(null);\n  return /*#__PURE__*/_jsxDEV(ErrorContext.Provider, {\n    value: {\n      error,\n      setError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(ErrorProvider, \"A8i/78Fx3FIozbyR2zwnz0NK35o=\");\n_c = ErrorProvider;\nvar _c;\n$RefreshReg$(_c, \"ErrorProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","ErrorContext","ErrorProvider","children","_s","console","log","error","setError","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hinan/todo-app/client/src/context/ErrorContext.js"],"sourcesContent":["import { createContext, useState } from 'react';\r\n\r\nexport const ErrorContext = createContext();\r\n\r\nexport const ErrorProvider = ({ children }) => {\r\n  console.log('ErrorContext module loaded');\r\n  const [error, setError] = useState(null);\r\n\r\n  return (\r\n    <ErrorContext.Provider value={{ error, setError }}>\r\n      {children}\r\n    </ErrorContext.Provider>\r\n  );\r\n};"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,OAAO,MAAMC,YAAY,gBAAGJ,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMK,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7CC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;EACzC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExC,oBACEE,OAAA,CAACC,YAAY,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAAEH,KAAK;MAAEC;IAAS,CAAE;IAAAL,QAAA,EAC/CA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACV,EAAA,CATWF,aAAa;AAAAa,EAAA,GAAbb,aAAa;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}