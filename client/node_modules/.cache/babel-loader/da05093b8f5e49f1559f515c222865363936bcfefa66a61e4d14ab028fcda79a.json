{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hinan\\\\todo-app\\\\client\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from 'react';\nimport { logoutUser, refreshUser } from '../services/login';\nimport { useNavigate } from 'react-router-dom';\nimport { showSuccess, showError } from '../utils/toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // マウント時にリフレッシュトークンでログイン状態確認\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const res = await refreshUser; // リフレッシュAPI\n        setUser(res.data.user); // 返ってきたユーザー情報をセット\n      } catch (err) {\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n\n  //ログアウト\n  const logout = async () => {\n    try {\n      await logoutUser();\n      setUser(null);\n      navigate(\"/login\");\n      showSuccess(`ログアウトしました`);\n    } catch (err) {\n      console.error(\"ログアウト失敗\", err);\n      showError(\"ログアウトに失敗しました\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      setUser,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"ueuWuDFVfdHdzTHtfYrOhacbhzM=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","logoutUser","refreshUser","useNavigate","showSuccess","showError","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","navigate","useEffect","checkAuth","res","data","err","logout","console","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/hinan/todo-app/client/src/context/AuthContext.jsx"],"sourcesContent":["import { createContext, useContext, useState } from 'react';\r\nimport { logoutUser , refreshUser} from '../services/login';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { showSuccess,showError } from '../utils/toast';\r\n\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser ] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  // マウント時にリフレッシュトークンでログイン状態確認\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        const res = await refreshUser; // リフレッシュAPI\r\n        setUser(res.data.user); // 返ってきたユーザー情報をセット\r\n      } catch (err) {\r\n        setUser(null);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    checkAuth();\r\n  }, []);\r\n\r\n  //ログアウト\r\n  const logout = async () => {\r\n    try {\r\n        await logoutUser();\r\n        setUser(null); \r\n        navigate(\"/login\");\r\n        showSuccess(`ログアウトしました`) \r\n    } catch (err) {\r\n        console.error(\"ログアウト失敗\", err);\r\n        showError(\"ログアウトに失敗しました\")\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, setUser, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SAASC,UAAU,EAAGC,WAAW,QAAO,mBAAmB;AAC3D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,EAACC,SAAS,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvD,MAAMC,WAAW,gBAAGV,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMW,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAE,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMgB,QAAQ,GAAGb,WAAW,CAAC,CAAC;;EAE9B;EACAc,SAAS,CAAC,MAAM;IACd,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMjB,WAAW,CAAC,CAAC;QAC/BW,OAAO,CAACM,GAAG,CAACC,IAAI,CAACR,IAAI,CAAC,CAAC,CAAC;MAC1B,CAAC,CAAC,OAAOS,GAAG,EAAE;QACZR,OAAO,CAAC,IAAI,CAAC;MACf,CAAC,SAAS;QACRE,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDG,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMI,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACA,MAAMrB,UAAU,CAAC,CAAC;MAClBY,OAAO,CAAC,IAAI,CAAC;MACbG,QAAQ,CAAC,QAAQ,CAAC;MAClBZ,WAAW,CAAC,WAAW,CAAC;IAC5B,CAAC,CAAC,OAAOiB,GAAG,EAAE;MACVE,OAAO,CAACC,KAAK,CAAC,SAAS,EAAEH,GAAG,CAAC;MAC7BhB,SAAS,CAAC,cAAc,CAAC;IAC7B;EACF,CAAC;EAED,oBACEE,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEd,IAAI;MAAEC,OAAO;MAAES;IAAO,CAAE;IAAAZ,QAAA,EACpDA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACnB,EAAA,CAtCWF,YAAY;EAAA,QAGNN,WAAW;AAAA;AAAA4B,EAAA,GAHjBtB,YAAY;AAwCzB,OAAO,MAAMuB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMlC,UAAU,CAACS,WAAW,CAAC;AAAA;AAACyB,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}