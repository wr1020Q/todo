{"ast":null,"code":"import{createContext,useReducer,useEffect,useState}from\"react\";import{getCategoriesAPI,addCategoryAPI,deleteCategoryAPI,getTasksAPI}from\"../services/TaskService\";import{showSuccess,showError}from\"../utils/toast\";import{jsx as _jsx}from\"react/jsx-runtime\";export const TaskContext=/*#__PURE__*/createContext();const initialState={tasks:[],// editText: \"\",\nisLoading:true,categoryFilter:[],sortBy:\"deadlineAsc\"};const taskReducer=(state,action)=>{switch(action.type){case\"INIT_TASKS\":return{...state,tasks:action.payload,isLoading:false};case\"ADD_TASK\":console.log(\"ADD_TASK\");return{...state,tasks:[...(state.tasks||[]),action.payload]};case\"DELETE_TASK\":return{...state,tasks:state.tasks.filter(task=>task._id!==action.payload.id)};case\"START_EDITING\":return{...state,tasks:state.tasks.map(task=>task._id===action.payload.id?{...task,isEditing:true}:task),editText:action.payload.text};case\"SAVE_EDIT\":return{...state,tasks:state.tasks.map(task=>task._id===action.payload.id?{...task,text:action.payload.text,isEditing:false}:task),editText:\"\"};case\"TOGGLE_TASK\":return{...state,tasks:state.tasks.map(task=>task._id===action.payload.id?{...task,completed:!task.completed}:task),editText:\"\"};case\"UPDATE_PRIORITY\":return{...state,tasks:state.tasks.map(task=>task._id===action.payload.id?{...task,priority:action.payload.newPriority}:task)};case\"SET_DUE_DATE\":return{...state,dueDate:action.payload};case\"UPDATE_DUE_DATE\":return{...state,tasks:state.tasks.map(task=>task._id===action.payload.id?{...task,dueDate:action.payload.dueDate}:task)};case\"TOGGLE_CATEGORY_FILTER\":const categoryId=action.payload._id||action.payload;// ID を抽出\nconst isSelected=state.categoryFilter.includes(categoryId);return{...state,categoryFilter:isSelected?state.categoryFilter.filter(id=>id!==categoryId):[...state.categoryFilter,categoryId]};case'SET_CATEGORY_FILTER':return{...state,categoryFilter:action.payload.map(cat=>typeof cat==='object'?cat._id:cat)};case\"SET_SORT\":return{...state,sortBy:action.payload};default:return state;}};export const TaskProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(taskReducer,initialState);const[categories,setCategories]=useState([]);const[newCategory,setNewCategory]=useState(\"\");const addCategory=async()=>{if(newCategory&&categories.some(c=>c.title===newCategory)){showError(\"このカテゴリーは既に存在します\");return;}try{console.log(\"新しいカテゴリー\",newCategory);const updated=await addCategoryAPI(newCategory);setCategories(prev=>[...prev,updated.data]);setNewCategory(\"\");showSuccess(\"カテゴリーを追加しました\");}catch(err){showError(\"カテゴリーを追加できませんでした\");console.error(\"カテゴリ追加失敗:\",err);}};const removeCategory=async(id,title)=>{if(title===\"未分類\")return;try{await deleteCategoryAPI(id);const res=await getTasksAPI();const catRes=await getCategoriesAPI();setCategories(catRes.data);dispatch({type:\"INIT_TASKS\",payload:res.data});showSuccess(\"カテゴリーを削除しました\");}catch(err){showError(\"カテゴリーを削除できませんでした\");console.error(\"カテゴリ削除エラー\",err);}};return/*#__PURE__*/_jsx(TaskContext.Provider,{value:{state,dispatch,categories,setCategories,newCategory,setNewCategory,addCategory,removeCategory},children:children});};","map":{"version":3,"names":["createContext","useReducer","useEffect","useState","getCategoriesAPI","addCategoryAPI","deleteCategoryAPI","getTasksAPI","showSuccess","showError","jsx","_jsx","TaskContext","initialState","tasks","isLoading","categoryFilter","sortBy","taskReducer","state","action","type","payload","console","log","filter","task","_id","id","map","isEditing","editText","text","completed","priority","newPriority","dueDate","categoryId","isSelected","includes","cat","TaskProvider","_ref","children","dispatch","categories","setCategories","newCategory","setNewCategory","addCategory","some","c","title","updated","prev","data","err","error","removeCategory","res","catRes","Provider","value"],"sources":["C:/Users/hinan/todo-app/client/src/context/TaskContext.jsx"],"sourcesContent":["import { createContext, useReducer,useEffect, useState} from \"react\";\r\nimport { getCategoriesAPI, addCategoryAPI ,deleteCategoryAPI,getTasksAPI} from \"../services/TaskService\";\r\nimport {showSuccess,showError} from \"../utils/toast\";\r\nexport const TaskContext = createContext();\r\n\r\nconst initialState = {\r\n  tasks: [],\r\n  // editText: \"\",\r\n  isLoading: true,\r\n  categoryFilter: [],\r\n  sortBy: \"deadlineAsc\", \r\n};\r\n\r\nconst taskReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case \"INIT_TASKS\":\r\n            return {\r\n                ...state,\r\n                tasks: action.payload,\r\n                isLoading: false\r\n            };\r\n        case \"ADD_TASK\":\r\n          console.log(\"ADD_TASK\")\r\n            return {\r\n              ...state,\r\n              tasks: [...(state.tasks || []), action.payload],\r\n            };\r\n        case \"DELETE_TASK\":\r\n          return{\r\n              ...state,\r\n              tasks: state.tasks.filter(task => task._id !== action.payload.id)\r\n          };\r\n        case \"START_EDITING\":\r\n            return {\r\n              ...state,\r\n              tasks: state.tasks.map(task =>\r\n                task._id === action.payload.id\r\n                  ? { ...task, isEditing: true }\r\n                  : task\r\n              ),\r\n              editText: action.payload.text,\r\n            };\r\n        case \"SAVE_EDIT\":\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map(task =>\r\n                task._id === action.payload.id\r\n                    ? { ...task, text: action.payload.text, isEditing: false }\r\n                    : task\r\n                ),\r\n                  editText:\"\"\r\n            };\r\n        case \"TOGGLE_TASK\":\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map(task =>\r\n                    task._id === action.payload.id\r\n                    ? { ...task, completed: !task.completed }\r\n                    : task\r\n                ),\r\n                    editText:\"\"\r\n            };\r\n        case \"UPDATE_PRIORITY\":\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map(task =>\r\n                task._id === action.payload.id\r\n                    ? { ...task, priority: action.payload.newPriority }\r\n                    : task\r\n                ),\r\n            };\r\n        case \"SET_DUE_DATE\":\r\n              return {\r\n                  ...state,\r\n                  dueDate: action.payload,\r\n              };\r\n        case \"UPDATE_DUE_DATE\":\r\n              return {\r\n                  ...state,\r\n                  tasks: state.tasks.map(task =>\r\n                    task._id === action.payload.id\r\n                      ? { ...task, dueDate: action.payload.dueDate }\r\n                      : task\r\n                  )\r\n                };\r\n        case \"TOGGLE_CATEGORY_FILTER\":\r\n              const categoryId = action.payload._id || action.payload; // ID を抽出\r\n              const isSelected = state.categoryFilter.includes(categoryId);\r\n              return {\r\n                  ...state,\r\n                  categoryFilter: isSelected\r\n                  ? state.categoryFilter.filter((id) => id !== categoryId)\r\n                  : [...state.categoryFilter, categoryId],\r\n              };\r\n        case 'SET_CATEGORY_FILTER':\r\n              return {\r\n                  ...state,\r\n                  categoryFilter: action.payload.map(cat => typeof cat === 'object' ? cat._id : cat),\r\n              };\r\n        case \"SET_SORT\":\r\n            return {\r\n                ...state,\r\n                sortBy: action.payload,\r\n            };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export const TaskProvider = ({ children }) => {\r\n\r\n  const [state, dispatch] = useReducer(taskReducer, initialState);\r\n  const [categories, setCategories] = useState([]);\r\n  const [newCategory, setNewCategory] = useState(\"\");\r\n\r\n  const addCategory = async () => {\r\n    if (newCategory && categories.some(c => c.title === newCategory)) {\r\n        showError(\"このカテゴリーは既に存在します\");\r\n        return;\r\n    }\r\n      try {\r\n        console.log(\"新しいカテゴリー\",newCategory)\r\n        const updated = await addCategoryAPI(newCategory);\r\n        setCategories(prev => [...prev, updated.data]); \r\n        setNewCategory(\"\");\r\n        showSuccess(\"カテゴリーを追加しました\")\r\n      } catch (err) {\r\n        showError(\"カテゴリーを追加できませんでした\")\r\n        console.error(\"カテゴリ追加失敗:\", err);\r\n      }\r\n    \r\n  };\r\n  \r\n    const removeCategory = async(id, title) => {\r\n      if (title === \"未分類\") return;\r\n    \r\n    try {\r\n      await deleteCategoryAPI(id); \r\n      const res = await getTasksAPI(); \r\n      const catRes = await getCategoriesAPI();\r\n  \r\n      setCategories(catRes.data);\r\n      dispatch({ type: \"INIT_TASKS\", payload: res.data });\r\n      showSuccess(\"カテゴリーを削除しました\")\r\n    } catch (err) {\r\n      showError(\"カテゴリーを削除できませんでした\")\r\n      console.error(\"カテゴリ削除エラー\", err);\r\n    }\r\n    };\r\n       \r\nreturn (\r\n       <TaskContext.Provider\r\n      value={{\r\n        state,\r\n        dispatch,\r\n        categories,\r\n        setCategories,\r\n        newCategory,\r\n        setNewCategory,\r\n        addCategory,\r\n        removeCategory\r\n      }}\r\n    >\r\n      {children}\r\n    </TaskContext.Provider>\r\n  );\r\n}\r\n"],"mappings":"AAAA,OAASA,aAAa,CAAEC,UAAU,CAACC,SAAS,CAAEC,QAAQ,KAAO,OAAO,CACpE,OAASC,gBAAgB,CAAEC,cAAc,CAAEC,iBAAiB,CAACC,WAAW,KAAO,yBAAyB,CACxG,OAAQC,WAAW,CAACC,SAAS,KAAO,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBACrD,MAAO,MAAM,CAAAC,WAAW,cAAGZ,aAAa,CAAC,CAAC,CAE1C,KAAM,CAAAa,YAAY,CAAG,CACnBC,KAAK,CAAE,EAAE,CACT;AACAC,SAAS,CAAE,IAAI,CACfC,cAAc,CAAE,EAAE,CAClBC,MAAM,CAAE,aACV,CAAC,CAED,KAAM,CAAAC,WAAW,CAAGA,CAACC,KAAK,CAAEC,MAAM,GAAK,CACnC,OAAOA,MAAM,CAACC,IAAI,EACd,IAAK,YAAY,CACb,MAAO,CACH,GAAGF,KAAK,CACRL,KAAK,CAAEM,MAAM,CAACE,OAAO,CACrBP,SAAS,CAAE,KACf,CAAC,CACL,IAAK,UAAU,CACbQ,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC,CACrB,MAAO,CACL,GAAGL,KAAK,CACRL,KAAK,CAAE,CAAC,IAAIK,KAAK,CAACL,KAAK,EAAI,EAAE,CAAC,CAAEM,MAAM,CAACE,OAAO,CAChD,CAAC,CACL,IAAK,aAAa,CAChB,MAAM,CACF,GAAGH,KAAK,CACRL,KAAK,CAAEK,KAAK,CAACL,KAAK,CAACW,MAAM,CAACC,IAAI,EAAIA,IAAI,CAACC,GAAG,GAAKP,MAAM,CAACE,OAAO,CAACM,EAAE,CACpE,CAAC,CACH,IAAK,eAAe,CAChB,MAAO,CACL,GAAGT,KAAK,CACRL,KAAK,CAAEK,KAAK,CAACL,KAAK,CAACe,GAAG,CAACH,IAAI,EACzBA,IAAI,CAACC,GAAG,GAAKP,MAAM,CAACE,OAAO,CAACM,EAAE,CAC1B,CAAE,GAAGF,IAAI,CAAEI,SAAS,CAAE,IAAK,CAAC,CAC5BJ,IACN,CAAC,CACDK,QAAQ,CAAEX,MAAM,CAACE,OAAO,CAACU,IAC3B,CAAC,CACL,IAAK,WAAW,CACZ,MAAO,CACH,GAAGb,KAAK,CACRL,KAAK,CAAEK,KAAK,CAACL,KAAK,CAACe,GAAG,CAACH,IAAI,EAC3BA,IAAI,CAACC,GAAG,GAAKP,MAAM,CAACE,OAAO,CAACM,EAAE,CACxB,CAAE,GAAGF,IAAI,CAAEM,IAAI,CAAEZ,MAAM,CAACE,OAAO,CAACU,IAAI,CAAEF,SAAS,CAAE,KAAM,CAAC,CACxDJ,IACN,CAAC,CACCK,QAAQ,CAAC,EACf,CAAC,CACL,IAAK,aAAa,CACd,MAAO,CACH,GAAGZ,KAAK,CACRL,KAAK,CAAEK,KAAK,CAACL,KAAK,CAACe,GAAG,CAACH,IAAI,EACvBA,IAAI,CAACC,GAAG,GAAKP,MAAM,CAACE,OAAO,CAACM,EAAE,CAC5B,CAAE,GAAGF,IAAI,CAAEO,SAAS,CAAE,CAACP,IAAI,CAACO,SAAU,CAAC,CACvCP,IACN,CAAC,CACGK,QAAQ,CAAC,EACjB,CAAC,CACL,IAAK,iBAAiB,CAClB,MAAO,CACH,GAAGZ,KAAK,CACRL,KAAK,CAAEK,KAAK,CAACL,KAAK,CAACe,GAAG,CAACH,IAAI,EAC3BA,IAAI,CAACC,GAAG,GAAKP,MAAM,CAACE,OAAO,CAACM,EAAE,CACxB,CAAE,GAAGF,IAAI,CAAEQ,QAAQ,CAAEd,MAAM,CAACE,OAAO,CAACa,WAAY,CAAC,CACjDT,IACN,CACJ,CAAC,CACL,IAAK,cAAc,CACb,MAAO,CACH,GAAGP,KAAK,CACRiB,OAAO,CAAEhB,MAAM,CAACE,OACpB,CAAC,CACP,IAAK,iBAAiB,CAChB,MAAO,CACH,GAAGH,KAAK,CACRL,KAAK,CAAEK,KAAK,CAACL,KAAK,CAACe,GAAG,CAACH,IAAI,EACzBA,IAAI,CAACC,GAAG,GAAKP,MAAM,CAACE,OAAO,CAACM,EAAE,CAC1B,CAAE,GAAGF,IAAI,CAAEU,OAAO,CAAEhB,MAAM,CAACE,OAAO,CAACc,OAAQ,CAAC,CAC5CV,IACN,CACF,CAAC,CACT,IAAK,wBAAwB,CACvB,KAAM,CAAAW,UAAU,CAAGjB,MAAM,CAACE,OAAO,CAACK,GAAG,EAAIP,MAAM,CAACE,OAAO,CAAE;AACzD,KAAM,CAAAgB,UAAU,CAAGnB,KAAK,CAACH,cAAc,CAACuB,QAAQ,CAACF,UAAU,CAAC,CAC5D,MAAO,CACH,GAAGlB,KAAK,CACRH,cAAc,CAAEsB,UAAU,CACxBnB,KAAK,CAACH,cAAc,CAACS,MAAM,CAAEG,EAAE,EAAKA,EAAE,GAAKS,UAAU,CAAC,CACtD,CAAC,GAAGlB,KAAK,CAACH,cAAc,CAAEqB,UAAU,CAC1C,CAAC,CACP,IAAK,qBAAqB,CACpB,MAAO,CACH,GAAGlB,KAAK,CACRH,cAAc,CAAEI,MAAM,CAACE,OAAO,CAACO,GAAG,CAACW,GAAG,EAAI,MAAO,CAAAA,GAAG,GAAK,QAAQ,CAAGA,GAAG,CAACb,GAAG,CAAGa,GAAG,CACrF,CAAC,CACP,IAAK,UAAU,CACX,MAAO,CACH,GAAGrB,KAAK,CACRF,MAAM,CAAEG,MAAM,CAACE,OACnB,CAAC,CACP,QACE,MAAO,CAAAH,KAAK,CAChB,CACF,CAAC,CAED,MAAO,MAAM,CAAAsB,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAEzC,KAAM,CAACvB,KAAK,CAAEyB,QAAQ,CAAC,CAAG3C,UAAU,CAACiB,WAAW,CAAEL,YAAY,CAAC,CAC/D,KAAM,CAACgC,UAAU,CAAEC,aAAa,CAAC,CAAG3C,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAAC4C,WAAW,CAAEC,cAAc,CAAC,CAAG7C,QAAQ,CAAC,EAAE,CAAC,CAElD,KAAM,CAAA8C,WAAW,CAAG,KAAAA,CAAA,GAAY,CAC9B,GAAIF,WAAW,EAAIF,UAAU,CAACK,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACC,KAAK,GAAKL,WAAW,CAAC,CAAE,CAC9DtC,SAAS,CAAC,iBAAiB,CAAC,CAC5B,OACJ,CACE,GAAI,CACFc,OAAO,CAACC,GAAG,CAAC,UAAU,CAACuB,WAAW,CAAC,CACnC,KAAM,CAAAM,OAAO,CAAG,KAAM,CAAAhD,cAAc,CAAC0C,WAAW,CAAC,CACjDD,aAAa,CAACQ,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAED,OAAO,CAACE,IAAI,CAAC,CAAC,CAC9CP,cAAc,CAAC,EAAE,CAAC,CAClBxC,WAAW,CAAC,cAAc,CAAC,CAC7B,CAAE,MAAOgD,GAAG,CAAE,CACZ/C,SAAS,CAAC,kBAAkB,CAAC,CAC7Bc,OAAO,CAACkC,KAAK,CAAC,WAAW,CAAED,GAAG,CAAC,CACjC,CAEJ,CAAC,CAEC,KAAM,CAAAE,cAAc,CAAG,KAAAA,CAAM9B,EAAE,CAAEwB,KAAK,GAAK,CACzC,GAAIA,KAAK,GAAK,KAAK,CAAE,OAEvB,GAAI,CACF,KAAM,CAAA9C,iBAAiB,CAACsB,EAAE,CAAC,CAC3B,KAAM,CAAA+B,GAAG,CAAG,KAAM,CAAApD,WAAW,CAAC,CAAC,CAC/B,KAAM,CAAAqD,MAAM,CAAG,KAAM,CAAAxD,gBAAgB,CAAC,CAAC,CAEvC0C,aAAa,CAACc,MAAM,CAACL,IAAI,CAAC,CAC1BX,QAAQ,CAAC,CAAEvB,IAAI,CAAE,YAAY,CAAEC,OAAO,CAAEqC,GAAG,CAACJ,IAAK,CAAC,CAAC,CACnD/C,WAAW,CAAC,cAAc,CAAC,CAC7B,CAAE,MAAOgD,GAAG,CAAE,CACZ/C,SAAS,CAAC,kBAAkB,CAAC,CAC7Bc,OAAO,CAACkC,KAAK,CAAC,WAAW,CAAED,GAAG,CAAC,CACjC,CACA,CAAC,CAEL,mBACO7C,IAAA,CAACC,WAAW,CAACiD,QAAQ,EACtBC,KAAK,CAAE,CACL3C,KAAK,CACLyB,QAAQ,CACRC,UAAU,CACVC,aAAa,CACbC,WAAW,CACXC,cAAc,CACdC,WAAW,CACXS,cACF,CAAE,CAAAf,QAAA,CAEDA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}