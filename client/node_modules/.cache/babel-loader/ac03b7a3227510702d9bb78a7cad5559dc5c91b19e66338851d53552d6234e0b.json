{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hinan\\\\todo-app\\\\client\\\\src\\\\component\\\\TaskListWrapper.jsx\",\n  _s = $RefreshSig$();\nimport { TaskContext } from \"../context/TaskContext\";\nimport TaskList from \"./TaskList\";\nimport { useMemo, useState, useContext } from \"react\";\nimport { deleteTaskAPI } from \"../services/TaskService\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TaskListWrapper({\n  categories,\n  editText,\n  dueDate,\n  removeCategory\n}) {\n  _s();\n  const {\n    state,\n    dispatch\n  } = useContext(TaskContext);\n  const {\n    tasks,\n    categoryFilter,\n    sortBy\n  } = state;\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const filteredTasks = useMemo(() => {\n    const result = tasks.filter(task => {\n      var _task$text;\n      const text = ((_task$text = task.text) !== null && _task$text !== void 0 ? _task$text : \"\").toLowerCase();\n      const keyword = searchQuery.toLowerCase();\n      const matchesCategory = categoryFilter.length === 0 || categoryFilter.includes(task.category);\n      const matchesKeyword = searchQuery.trim() === \"\" || text.includes(keyword);\n\n      // console.log({\n      //   text,\n      //   keyword,\n      //   matchesCategory,\n      //   matchesKeyword,\n      //   included: matchesCategory && matchesKeyword,\n      // });\n\n      return matchesCategory && matchesKeyword;\n    });\n    return result;\n  }, [tasks, categoryFilter, searchQuery]);\n  const deleteTask = async id => {\n    await deleteTaskAPI(id);\n    dispatch({\n      type: \"DELETE_TASK\",\n      payload: {\n        id\n      }\n    });\n  };\n  console.log(\"filteredTasks W:\", filteredTasks);\n  const sortedTasks = useMemo(() => {\n    return [...filteredTasks].sort((a, b) => {\n      switch (sortBy) {\n        case \"deadlineAsc\":\n          return new Date(a.dueDate) - new Date(b.dueDate);\n        case \"deadlineDesc\":\n          return new Date(b.dueDate) - new Date(a.dueDate);\n        case \"priority\":\n          return b.priority - a.priority;\n        case \"createdAtDesc\":\n          return new Date(b.id) - new Date(a.id);\n        default:\n          return 0;\n      }\n    });\n  }, [filteredTasks, sortBy]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u30AD\\u30FC\\u30EF\\u30FC\\u30C9\\u3067\\u691C\\u7D22\",\n      value: searchQuery,\n      onChange: e => setSearchQuery(e.target.value),\n      className: \"border p-2 rounded mb-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: sortBy,\n      onChange: e => dispatch({\n        type: \"SET_SORT\",\n        payload: e.target.value\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"deadlineAsc\",\n        children: \"\\u7DE0\\u5207\\u304C\\u8FD1\\u3044\\u9806\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"deadlineDesc\",\n        children: \"\\u7DE0\\u5207\\u304C\\u9060\\u3044\\u9806\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"priority\",\n        children: \"\\u512A\\u5148\\u5EA6\\u304C\\u9AD8\\u3044\\u9806\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"createdAtDesc\",\n        children: \"\\u4F5C\\u6210\\u65E5\\u304C\\u65B0\\u3057\\u3044\\u9806\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: sortedTasks,\n      categories: categories,\n      editText: editText,\n      setEditText: text => dispatch({\n        type: \"START_EDITING\",\n        payload: {\n          id: null,\n          text\n        }\n      }),\n      startEditing: (id, text) => dispatch({\n        type: \"START_EDITING\",\n        payload: {\n          id,\n          text\n        }\n      })\n      // saveEdit={(id) => dispatch({ type: \"SAVE_EDIT\", payload: { id } })}\n      ,\n      toggleTask: id => dispatch({\n        type: \"TOGGLE_TASK\",\n        payload: {\n          id\n        }\n      }),\n      toggleComplete: id => dispatch({\n        type: \"TOGGLE_COMPLETE\",\n        payload: {\n          id\n        }\n      }),\n      deleteTask: deleteTask,\n      updatePriority: (id, newPriority) => dispatch({\n        type: \"UPDATE_PRIORITY\",\n        payload: {\n          id,\n          newPriority\n        }\n      }),\n      removeCategory: removeCategory,\n      dueDate: dueDate,\n      updateDueDate: (id, dueDate) => dispatch({\n        type: \"UPDATE_DUE_DATE\",\n        payload: {\n          id,\n          dueDate\n        }\n      }),\n      categoryFilter: categoryFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TaskListWrapper, \"zIxLo19sPJgad2AVhdyXlgMW3cg=\");\n_c = TaskListWrapper;\nvar _c;\n$RefreshReg$(_c, \"TaskListWrapper\");","map":{"version":3,"names":["TaskContext","TaskList","useMemo","useState","useContext","deleteTaskAPI","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskListWrapper","categories","editText","dueDate","removeCategory","_s","state","dispatch","tasks","categoryFilter","sortBy","searchQuery","setSearchQuery","filteredTasks","result","filter","task","_task$text","text","toLowerCase","keyword","matchesCategory","length","includes","category","matchesKeyword","trim","deleteTask","id","type","payload","console","log","sortedTasks","sort","a","b","Date","priority","children","placeholder","value","onChange","e","target","className","fileName","_jsxFileName","lineNumber","columnNumber","setEditText","startEditing","toggleTask","toggleComplete","updatePriority","newPriority","updateDueDate","_c","$RefreshReg$"],"sources":["C:/Users/hinan/todo-app/client/src/component/TaskListWrapper.jsx"],"sourcesContent":["import { TaskContext } from \"../context/TaskContext\"; \r\nimport TaskList from \"./TaskList\";\r\nimport { useMemo, useState ,useContext } from \"react\";\r\nimport { deleteTaskAPI } from \"../services/TaskService\";\r\n\r\nexport default function TaskListWrapper({ categories,editText,dueDate,removeCategory }) {\r\n  const { state, dispatch } = useContext(TaskContext);\r\n  const { tasks, categoryFilter, sortBy } = state;\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  const filteredTasks = useMemo(() => {\r\n    const result = tasks.filter((task) => {\r\n      const text = (task.text ?? \"\").toLowerCase();\r\n      const keyword = searchQuery.toLowerCase();\r\n      const matchesCategory = categoryFilter.length === 0 || categoryFilter.includes(task.category);\r\n      const matchesKeyword = searchQuery.trim() === \"\" || text.includes(keyword);\r\n  \r\n      // console.log({\r\n      //   text,\r\n      //   keyword,\r\n      //   matchesCategory,\r\n      //   matchesKeyword,\r\n      //   included: matchesCategory && matchesKeyword,\r\n      // });\r\n  \r\n      return matchesCategory && matchesKeyword;\r\n    });\r\n  \r\n    return result;\r\n  }, [tasks, categoryFilter, searchQuery]);\r\n\r\n  const deleteTask = async (id) => {\r\n    await deleteTaskAPI(id);\r\n    dispatch({ type: \"DELETE_TASK\", payload: { id } });\r\n  };\r\n\r\n  console.log(\"filteredTasks W:\", filteredTasks);\r\n\r\n  const sortedTasks = useMemo(() => {\r\n    return [...filteredTasks].sort((a, b) => {\r\n      switch (sortBy) {\r\n        case \"deadlineAsc\":\r\n          return new Date(a.dueDate) - new Date(b.dueDate);\r\n        case \"deadlineDesc\":\r\n          return new Date(b.dueDate) - new Date(a.dueDate);\r\n        case \"priority\":\r\n          return b.priority - a.priority;\r\n        case \"createdAtDesc\":\r\n          return new Date(b.id) - new Date(a.id);\r\n        default:\r\n          return 0;\r\n      }\r\n    });\r\n  }, [filteredTasks, sortBy]);\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"キーワードで検索\"\r\n        value={searchQuery}\r\n        onChange={(e) => setSearchQuery(e.target.value)}\r\n        className=\"border p-2 rounded mb-2\"\r\n      />\r\n      <select\r\n        value={sortBy}\r\n        onChange={(e) =>dispatch({ type: \"SET_SORT\", payload: e.target.value })}\r\n      >\r\n        <option value=\"deadlineAsc\">締切が近い順</option>\r\n        <option value=\"deadlineDesc\">締切が遠い順</option>\r\n        <option value=\"priority\">優先度が高い順</option>\r\n        <option value=\"createdAtDesc\">作成日が新しい順</option>\r\n      </select>\r\n\r\n      <TaskList\r\n        tasks={sortedTasks}\r\n        categories={categories}\r\n        editText={editText}\r\n        setEditText={(text) => dispatch({ type: \"START_EDITING\", payload: { id: null, text } })}\r\n        startEditing={(id, text) => dispatch({ type: \"START_EDITING\", payload: { id, text } })}\r\n        // saveEdit={(id) => dispatch({ type: \"SAVE_EDIT\", payload: { id } })}\r\n        toggleTask={(id) => dispatch({ type: \"TOGGLE_TASK\", payload: { id } })}\r\n        toggleComplete={(id) => dispatch({ type: \"TOGGLE_COMPLETE\", payload: { id } })}\r\n        deleteTask={deleteTask}\r\n        updatePriority={(id, newPriority) =>\r\n          dispatch({ type: \"UPDATE_PRIORITY\", payload: { id, newPriority } })\r\n        }\r\n        removeCategory={removeCategory}\r\n        dueDate={dueDate}\r\n        updateDueDate={(id, dueDate) =>\r\n          dispatch({ type: \"UPDATE_DUE_DATE\", payload: { id, dueDate } })}\r\n          categoryFilter={categoryFilter}\r\n      />\r\n    </>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}